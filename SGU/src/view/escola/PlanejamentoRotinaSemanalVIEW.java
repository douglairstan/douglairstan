/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view.escola;

import base.ctr.BaseCTR;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static lib.java.MD5.md5;

/**
 *
 * @author Douglas Estanislau Pereira
 */
public class PlanejamentoRotinaSemanalVIEW extends javax.swing.JInternalFrame {

    Date hoje = new Date();
    SimpleDateFormat indata= new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat outdata = new SimpleDateFormat("dd/MM/yyyy");
    
    /**
     * Creates new form PlanejamentoRotinaSemanalVIEW
     */
    public PlanejamentoRotinaSemanalVIEW() {
        initComponents();
        Iniciar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonNovo = new javax.swing.JButton();
        jButtonGravar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldCodigoPRS = new javax.swing.JTextField();
        jButtonSair = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxProfessorUF = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldProfessorRG = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldProfessorNome = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPasswordFieldProfessorSenha = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldClasseNumero = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldSerie = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldTurma = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaRotina1 = new javax.swing.JTextArea();
        jComboBoxDisciplina1 = new javax.swing.JComboBox();
        jFormattedTextFieldData1 = new javax.swing.JFormattedTextField();
        jComboBoxDisciplina2 = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaRotina2 = new javax.swing.JTextArea();
        jComboBoxDisciplina3 = new javax.swing.JComboBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaRotina3 = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxDisciplina = new javax.swing.JComboBox();
        jButtonAddDisciplina = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxCaderno = new javax.swing.JComboBox();
        jComboBoxDisciplina4 = new javax.swing.JComboBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextAreaRotina4 = new javax.swing.JTextArea();
        jComboBoxDisciplina5 = new javax.swing.JComboBox();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextAreaRotina5 = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextAreaRotina6 = new javax.swing.JTextArea();
        jComboBoxDisciplina6 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableHistorico = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jComboBoxPeriodo = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jButtonExcluirPlanejamento = new javax.swing.JButton();
        jTextFieldExcluirPlanejamento = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        jButtonNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/48x48/Novo48.png"))); // NOI18N
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonNovo);
        jButtonNovo.setBounds(0, 0, 80, 80);

        jButtonGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/48x48/Gravar48.png"))); // NOI18N
        jButtonGravar.setToolTipText("Gravar Relatório");
        jButtonGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGravarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonGravar);
        jButtonGravar.setBounds(80, 0, 80, 80);

        jLabel8.setText("Código:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(250, 50, 80, 14);

        jTextFieldCodigoPRS.setEditable(false);
        jTextFieldCodigoPRS.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTextFieldCodigoPRS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCodigoPRSKeyPressed(evt);
            }
        });
        getContentPane().add(jTextFieldCodigoPRS);
        jTextFieldCodigoPRS.setBounds(250, 70, 60, 26);

        jButtonSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/48x48/Sair48.png"))); // NOI18N
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSair);
        jButtonSair.setBounds(160, 0, 80, 80);

        jLabel3.setText("UF:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(250, 0, 50, 14);

        jComboBoxProfessorUF.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jComboBoxProfessorUF);
        jComboBoxProfessorUF.setBounds(250, 20, 60, 26);

        jLabel6.setText("RG:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(320, 0, 60, 14);

        jTextFieldProfessorRG.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTextFieldProfessorRG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldProfessorRGKeyPressed(evt);
            }
        });
        getContentPane().add(jTextFieldProfessorRG);
        jTextFieldProfessorRG.setBounds(320, 20, 130, 26);

        jLabel10.setText("Docente:");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(460, 0, 130, 14);

        jTextFieldProfessorNome.setEditable(false);
        jTextFieldProfessorNome.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jTextFieldProfessorNome);
        jTextFieldProfessorNome.setBounds(460, 20, 430, 26);

        jLabel7.setText("Senha:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(900, 0, 70, 14);

        jPasswordFieldProfessorSenha.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jPasswordFieldProfessorSenha);
        jPasswordFieldProfessorSenha.setBounds(900, 20, 130, 26);

        jLabel2.setText("Classe:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(340, 50, 60, 14);

        jTextFieldClasseNumero.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTextFieldClasseNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldClasseNumeroKeyPressed(evt);
            }
        });
        getContentPane().add(jTextFieldClasseNumero);
        jTextFieldClasseNumero.setBounds(340, 70, 100, 26);

        jLabel4.setText("Série:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(450, 50, 60, 14);

        jTextFieldSerie.setEditable(false);
        jTextFieldSerie.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jTextFieldSerie);
        jTextFieldSerie.setBounds(450, 70, 60, 26);

        jLabel5.setText("Turma:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(520, 50, 60, 14);

        jTextFieldTurma.setEditable(false);
        jTextFieldTurma.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jTextFieldTurma);
        jTextFieldTurma.setBounds(520, 70, 60, 26);

        jPanel1.setLayout(null);

        jTextAreaRotina1.setColumns(20);
        jTextAreaRotina1.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jTextAreaRotina1.setLineWrap(true);
        jTextAreaRotina1.setRows(12);
        jTextAreaRotina1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaRotina1KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTextAreaRotina1);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(0, 60, 180, 110);

        jComboBoxDisciplina1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanel1.add(jComboBoxDisciplina1);
        jComboBoxDisciplina1.setBounds(0, 30, 180, 26);

        try {
            jFormattedTextFieldData1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldData1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanel1.add(jFormattedTextFieldData1);
        jFormattedTextFieldData1.setBounds(40, 0, 100, 26);

        jComboBoxDisciplina2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanel1.add(jComboBoxDisciplina2);
        jComboBoxDisciplina2.setBounds(0, 190, 180, 26);

        jTextAreaRotina2.setColumns(20);
        jTextAreaRotina2.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jTextAreaRotina2.setLineWrap(true);
        jTextAreaRotina2.setRows(12);
        jTextAreaRotina2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaRotina2KeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTextAreaRotina2);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(0, 220, 180, 110);

        jComboBoxDisciplina3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanel1.add(jComboBoxDisciplina3);
        jComboBoxDisciplina3.setBounds(0, 330, 180, 26);

        jTextAreaRotina3.setColumns(20);
        jTextAreaRotina3.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jTextAreaRotina3.setLineWrap(true);
        jTextAreaRotina3.setRows(12);
        jTextAreaRotina3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaRotina3KeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(jTextAreaRotina3);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(0, 360, 180, 110);

        jLabel11.setText("Disciplina:");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(250, 30, 90, 14);

        jComboBoxDisciplina.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanel1.add(jComboBoxDisciplina);
        jComboBoxDisciplina.setBounds(180, 70, 220, 26);

        jButtonAddDisciplina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddDisciplina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddDisciplinaActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAddDisciplina);
        jButtonAddDisciplina.setBounds(400, 70, 30, 25);

        jLabel1.setText("Caderno:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(270, 150, 80, 14);

        jComboBoxCaderno.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jComboBoxCaderno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "1", "2", "3", "4" }));
        jPanel1.add(jComboBoxCaderno);
        jComboBoxCaderno.setBounds(270, 170, 70, 26);

        jComboBoxDisciplina4.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanel1.add(jComboBoxDisciplina4);
        jComboBoxDisciplina4.setBounds(0, 470, 180, 26);

        jTextAreaRotina4.setColumns(20);
        jTextAreaRotina4.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jTextAreaRotina4.setLineWrap(true);
        jTextAreaRotina4.setRows(12);
        jTextAreaRotina4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaRotina4KeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(jTextAreaRotina4);

        jPanel1.add(jScrollPane5);
        jScrollPane5.setBounds(0, 500, 180, 110);

        jComboBoxDisciplina5.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanel1.add(jComboBoxDisciplina5);
        jComboBoxDisciplina5.setBounds(0, 470, 180, 26);

        jTextAreaRotina5.setColumns(20);
        jTextAreaRotina5.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jTextAreaRotina5.setLineWrap(true);
        jTextAreaRotina5.setRows(12);
        jTextAreaRotina5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaRotina5KeyPressed(evt);
            }
        });
        jScrollPane6.setViewportView(jTextAreaRotina5);

        jPanel1.add(jScrollPane6);
        jScrollPane6.setBounds(0, 500, 180, 110);

        jTextAreaRotina6.setColumns(20);
        jTextAreaRotina6.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jTextAreaRotina6.setLineWrap(true);
        jTextAreaRotina6.setRows(12);
        jTextAreaRotina6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaRotina6KeyPressed(evt);
            }
        });
        jScrollPane7.setViewportView(jTextAreaRotina6);

        jPanel1.add(jScrollPane7);
        jScrollPane7.setBounds(0, 640, 180, 110);

        jComboBoxDisciplina6.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanel1.add(jComboBoxDisciplina6);
        jComboBoxDisciplina6.setBounds(0, 610, 180, 26);

        jTabbedPane1.addTab("Rotina:", jPanel1);

        jPanel2.setLayout(null);

        jTableHistorico.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTableHistorico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código:", "Data:", "Disciplina:", "Caderno:", "Período:", "Classe:", "Ensino:", "Turma:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableHistorico.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableHistorico.getTableHeader().setReorderingAllowed(false);
        jTableHistorico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableHistoricoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableHistorico);
        if (jTableHistorico.getColumnModel().getColumnCount() > 0) {
            jTableHistorico.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTableHistorico.getColumnModel().getColumn(1).setPreferredWidth(120);
            jTableHistorico.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTableHistorico.getColumnModel().getColumn(3).setPreferredWidth(80);
            jTableHistorico.getColumnModel().getColumn(4).setPreferredWidth(120);
            jTableHistorico.getColumnModel().getColumn(5).setPreferredWidth(120);
            jTableHistorico.getColumnModel().getColumn(6).setPreferredWidth(70);
            jTableHistorico.getColumnModel().getColumn(7).setPreferredWidth(70);
        }

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 860, 310);

        jTabbedPane1.addTab("Histórico:", jPanel2);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(10, 80, 1090, 860);

        jLabel12.setText("Período:");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(590, 50, 80, 14);

        jComboBoxPeriodo.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jComboBoxPeriodo);
        jComboBoxPeriodo.setBounds(590, 70, 150, 26);

        jLabel13.setText("Código:");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(940, 50, 70, 14);

        jButtonExcluirPlanejamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/remove16.png"))); // NOI18N
        jButtonExcluirPlanejamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirPlanejamentoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonExcluirPlanejamento);
        jButtonExcluirPlanejamento.setBounds(1000, 70, 30, 25);

        jTextFieldExcluirPlanejamento.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jTextFieldExcluirPlanejamento);
        jTextFieldExcluirPlanejamento.setBounds(940, 70, 60, 26);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void Iniciar(){
        Dimension tela = Toolkit.getDefaultToolkit().getScreenSize();
        int lar = (int) tela.getWidth();
        int alt = (int) tela.getHeight();
        
        this.setTitle("Planejamento da Rotina Semanal");
        //this.setSize((lar-50), (alt-80));
        //this.setSize(900, 600);
        this.setSize(1125, 980);
        
        //Date hoje = new Date();
        //SimpleDateFormat df;
        //df = new SimpleDateFormat("dd/MM/yyyy");

        
        //jTextFieldData.setText(df.format(hoje));
        ConsultarDisciplina();
        ConsultarUF();
        ConsultarPeriodo();
    }
    
    public void ConsultarPeriodo(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarPeriodo();
            jComboBoxPeriodo.removeAllItems();
            while(rs.next()){       
                jComboBoxPeriodo.addItem(rs.getString("periodo_nome"));    
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
           }    
    }
    
    public void InserirDisciplina(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String disciplina = JOptionPane.showInputDialog("Informe a Disciplina:","");
            if ("".equals(disciplina)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirDisciplina(disciplina.toUpperCase());
		JOptionPane.showMessageDialog(null,""+disciplina+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarDisciplina();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}    
    }
    
    public void ConsultarDisciplina(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarDisciplina();
            jComboBoxDisciplina.removeAllItems();
            while(rs.next()){       
                jComboBoxDisciplina.addItem(rs.getString("disciplina_nome"));    
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
           }    
    }
    
    public void Sair(){
        this.dispose();
    }
    
    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        Novo();
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGravarActionPerformed
        PlanejamentoRotinaSemanal();
    }//GEN-LAST:event_jButtonGravarActionPerformed

    public void Novo(){
        jTextFieldCodigoPRS.setText("");
        MostraCodigo();
        jFormattedTextFieldData1.setText(outdata.format(hoje));
    }
    
    public void PlanejamentoRotinaSemanal(){
    try{
            //BibliotecaCTR inserirCTR = new EscolaCTR();	
            if ("".equals(jTextFieldCodigoPRS.getText()) || "  /  /   ".equals(jFormattedTextFieldData1.getText()) || "".equals(jComboBoxDisciplina.getSelectedItem()) || "".equals(jComboBoxCaderno.getSelectedItem()) || "".equals(jComboBoxProfessorUF.getSelectedItem()) || "".equals(jTextFieldProfessorRG.getText()) || "".equals(jTextFieldProfessorNome.getText()) || "".equals(jPasswordFieldProfessorSenha.getText()) || "".equals(jTextFieldClasseNumero.getText()) || "".equals(jTextFieldSerie.getText()) || "".equals(jTextFieldTurma.getText()) || "".equals(jComboBoxPeriodo.getSelectedItem()) || "".equals(jTextAreaRotina1.getText())){
               JOptionPane.showMessageDialog(null,"Campos de Dados em Branco, Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
               //requestfocus();
            }else{
                VerificadorPessoaSenha();
                }
            }
            catch(Exception e){
                //JOptionPane.showMessageDialog(null,"Campos de Dados em Branco... ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
		System.out.println(e.getMessage());
	}    
    }
    
    public void VerificadorPessoaSenha(){
    try{
            BaseCTR bibliotecaCTR = new BaseCTR();
            ResultSet rs=null;
            rs=bibliotecaCTR.VerificadorPessoaSenha(jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""), md5(jPasswordFieldProfessorSenha.getText()));
            int v = 0;
            while(rs.next()){       
                v = (rs.getInt("verificador"));  
            }
            if (v == 1){
                VerificarPlanejamento();
            }else{
                JOptionPane.showMessageDialog(null,"Senha está digitada errada. Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
                jPasswordFieldProfessorSenha.setText("");
                jPasswordFieldProfessorSenha.requestFocus();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }    
    }
    
    public void VerificadorPessoaSenha1(){
    try{
            BaseCTR bibliotecaCTR = new BaseCTR();
            ResultSet rs=null;
            rs=bibliotecaCTR.VerificadorPessoaSenha(jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""), md5(jPasswordFieldProfessorSenha.getText()));
            int v = 0;
            while(rs.next()){       
                v = (rs.getInt("verificador"));  
            }
            if (v == 1){
                //RemoverPlanejamento();
                VerificarPlanejamento1();
            }else{
                JOptionPane.showMessageDialog(null,"Senha está digitada errada. Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
                jPasswordFieldProfessorSenha.setText("");
                jPasswordFieldProfessorSenha.requestFocus();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }    
    }
    
    public void VerificarPlanejamento(){
    try{
            BaseCTR bibliotecaCTR = new BaseCTR();
            ResultSet rs=null;
            rs=bibliotecaCTR.VerificarPlanejamento(Integer.parseInt(jTextFieldCodigoPRS.getText()), jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""));
            int v = 0;
            while(rs.next()){       
                v = (rs.getInt("verificador"));  
            }
            if(v == 0){
                InserirPlanejamento();
            }
            if (v == 1){
                AlterarPlanejamento();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }    
    }
    
    public void VerificarPlanejamento1(){
    try{
            BaseCTR bibliotecaCTR = new BaseCTR();
            ResultSet rs=null;
            rs=bibliotecaCTR.VerificarPlanejamento(Integer.parseInt(jTextFieldCodigoPRS.getText()), jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""));
            int v = 0;
            while(rs.next()){       
                v = (rs.getInt("verificador"));  
            }
            if (v == 1){
                //AlterarPlanejamento();
                RemoverPlanejamento();
            }
            if (v == 0){
                //AlterarPlanejamento();
                //RemoverPlanejamento();
                JOptionPane.showMessageDialog(null,"Você não tem acesso a tal função...","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }    
    }
    
    public void InserirPlanejamento(){
    try{
        BaseCTR bibliotecaCTR = new BaseCTR();
        //ResultSet rs=null;
        //rs=bibliotecaCTR.VerificadorPessoaSenha(jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""), md5(jPasswordFieldProfessorSenha.getText()));   
        int i = JOptionPane.showConfirmDialog(null, "Deseja Inserir este Planejamento? ","Informação: ", JOptionPane.YES_NO_OPTION);
            if(i == JOptionPane.YES_OPTION){
                bibliotecaCTR.InserirPlanejamentoRotinaSemanal(Integer.parseInt(jTextFieldCodigoPRS.getText()), jFormattedTextFieldData1.getText(), jComboBoxCaderno.getSelectedItem().toString(), jComboBoxPeriodo.getSelectedItem().toString(), jComboBoxDisciplina.getSelectedItem().toString(), jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""), jTextFieldClasseNumero.getText().toUpperCase(), jTextAreaRotina1.getText().toUpperCase());
                JOptionPane.showMessageDialog(null,"Planejamento Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                MostrarDadosTabelaPlanejamento();
                LimparCampos();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
         }    
     }
    
    public void AlterarPlanejamento(){
    try{
        BaseCTR bibliotecaCTR = new BaseCTR();
        //ResultSet rs=null;
        //rs=bibliotecaCTR.VerificadorPessoaSenha(jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""), md5(jPasswordFieldProfessorSenha.getText()));   
        int i = JOptionPane.showConfirmDialog(null, "Deseja Alterar este Planejamento? ","Informação: ", JOptionPane.YES_NO_OPTION);
            if(i == JOptionPane.YES_OPTION){
                bibliotecaCTR.AlterarPlanejamentoRotinaSemanal(Integer.parseInt(jTextFieldCodigoPRS.getText()),jFormattedTextFieldData1.getText(), jComboBoxCaderno.getSelectedItem().toString(), jComboBoxPeriodo.getSelectedItem().toString(), jComboBoxDisciplina.getSelectedItem().toString(), jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""), jTextFieldClasseNumero.getText(), jTextAreaRotina1.getText().toUpperCase());
                JOptionPane.showMessageDialog(null,"Planejamento Alterar com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                MostrarDadosTabelaPlanejamento();
                LimparCampos();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
         }    
    }
    
    public void RemoverPlanejamento(){
    try{
        BaseCTR bibliotecaCTR = new BaseCTR();
        int i = JOptionPane.showConfirmDialog(null, "Deseja Excluir este Planejamento? ","Informação: ", JOptionPane.YES_NO_OPTION);
            if(i == JOptionPane.YES_OPTION){
                bibliotecaCTR.RemoverPlanejamentoRotinaSemanal(Integer.parseInt(jTextFieldCodigoPRS.getText()), jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""));
                JOptionPane.showMessageDialog(null,"Planejamento Excluido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                MostrarDadosTabelaPlanejamento();
                LimparCampos();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
         }    
    }
    
    public void LimparCampos(){
        //jComboBoxCaderno.setSelectedItem("1");
        //jComboBoxDisciplina.setSelectedItem("MATEMÁTICA");
        //jComboBoxPeriodo.setSelectedItem("");
        //jComboBoxProfessorUF.setSelectedItem("SP");
        jTextAreaRotina1.setText("");
        //jTextFieldClasseNumero.setText("");
        jTextFieldCodigoPRS.setText("");
        jFormattedTextFieldData1.setText("  /  /    ");
        //jTextFieldSerie.setText("");
        //jTextFieldTurma.setText("");
        
    }
    
    public void MostraCodigo(){
        try{
            BaseCTR consultar = new BaseCTR();
            ResultSet rs=null;
            rs=consultar.PlanejamentoRotinaSemanalCodigo();
            while (rs.next()){
                System.out.println(rs);
                jTextFieldCodigoPRS.setText(rs.getString("codigo"));
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
        }
    }
    
    public void ConsultarUF(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarUF();
            jComboBoxProfessorUF.removeAllItems();
            while(rs.next()){       
                jComboBoxProfessorUF.addItem(rs.getString("uf_nome"));
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    private void jTextFieldCodigoPRSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodigoPRSKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER){
            if ("".equals(jTextFieldCodigoPRS.getText())){
                JOptionPane.showMessageDialog(null,"Campo Código Vazio. Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }else{
               
            }
        }
    }//GEN-LAST:event_jTextFieldCodigoPRSKeyPressed

    public void ConsultarVerificadorDocente(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.VerificadorRelatarPessoaDocente(jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""));
            int v = 0;
            while(rs.next()){       
                v = (rs.getInt("verificador"));  
            }
            if (v == 0){
                JOptionPane.showMessageDialog(null,"RG não encontrado ou não existente. Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                jTextFieldProfessorRG.setText("");
                jTextFieldProfessorNome.setText("");
                jPasswordFieldProfessorSenha.setText("");
                jTextFieldProfessorRG.requestFocus();
            }else{
                ConsultarRelatarDocenteNome();
                MostrarDadosTabelaPlanejamento();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
         }
    }
    
    public void ConsultarRelatarDocenteNome(){
        try{
            BaseCTR consultar = new BaseCTR();
            ResultSet rs=null;
            rs=consultar.ConsultarRelatarPessoaNome(jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""));
            while (rs.next()){
                jTextFieldProfessorNome.setText((rs.getString("pessoa_nome")));
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
        }
    }
    
    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        // TODO add your handling code here:
        Sair();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jTextFieldProfessorRGKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldProfessorRGKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER){
            ConsultarVerificadorDocente();
            //MostrarDadosTabelaRelatoriosDocente();
            jTextFieldProfessorRG.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldProfessorRGKeyPressed

    private void jButtonAddDisciplinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddDisciplinaActionPerformed
        // TODO add your handling code here:
        InserirDisciplina();
    }//GEN-LAST:event_jButtonAddDisciplinaActionPerformed

    public void ConsultarClasse(){
        ClasseConsultaDIALOG  jDialog = new ClasseConsultaDIALOG(null, true);
        jDialog.setModal(true);
        jDialog.setVisible(true);
        jTextFieldClasseNumero.setText(jDialog.getCod());
        jTextFieldSerie.setText(jDialog.getSerie());
        jTextFieldTurma.setText(jDialog.getTurma());
    }
    
    private void jTextFieldClasseNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldClasseNumeroKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER){
            ConsultarClasse();
        }
    }//GEN-LAST:event_jTextFieldClasseNumeroKeyPressed

    private void jTextAreaRotina1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaRotina1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() != evt.VK_CAPS_LOCK){
            CapsLock();
        }
    }//GEN-LAST:event_jTextAreaRotina1KeyPressed

    public void ConsultarPlanejamentoRotinaSemanal(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarPlanejamentoRotinaSemanal(Integer.parseInt(jTextFieldCodigoPRS.getText()), jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText());
            while(rs.next()){     
                //jTextFieldData.setText((rs.getString("prs_data_semanal")));
                //jComboBoxCaderno.setSelectedItem((rs.getString("")));
                //jComboBoxPeriodo.setSelectedItem((rs.getString("")));
                //jComboBoxDisciplina.setSelectedItem((rs.getString("")));
                jTextAreaRotina1.setText((rs.getString("prs_descricao")));
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
         }
    }
    
    private void jTableHistoricoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableHistoricoMouseClicked
        // TODO add your handling code here:
        int linha = jTableHistorico.getSelectedRow();
        jTextFieldCodigoPRS.setText(jTableHistorico.getValueAt(linha,0).toString());
        jTextFieldExcluirPlanejamento.setText(jTableHistorico.getValueAt(linha,0).toString());

        String result = null;
        try {
            result = outdata.format(indata.parse(jTableHistorico.getValueAt(linha,1).toString()));
        } catch (ParseException ex) {
            Logger.getLogger(PlanejamentoRotinaSemanalVIEW.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jFormattedTextFieldData1.setText(result);
        jComboBoxDisciplina.setSelectedItem(jTableHistorico.getValueAt(linha,2).toString());
        jComboBoxCaderno.setSelectedItem(jTableHistorico.getValueAt(linha,3).toString());
        jComboBoxPeriodo.setSelectedItem(jTableHistorico.getValueAt(linha,4).toString());
        jTextFieldClasseNumero.setText(jTableHistorico.getValueAt(linha,5).toString());
        jTextFieldSerie.setText(jTableHistorico.getValueAt(linha,6).toString());
        jTextFieldTurma.setText(jTableHistorico.getValueAt(linha,7).toString());
        ConsultarPlanejamentoRotinaSemanal();
        jTabbedPane1.setSelectedComponent(jPanel1);
    }//GEN-LAST:event_jTableHistoricoMouseClicked

    private void jButtonExcluirPlanejamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirPlanejamentoActionPerformed
        // TODO add your handling code here:
        Remover();
    }//GEN-LAST:event_jButtonExcluirPlanejamentoActionPerformed

    private void jTextAreaRotina2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaRotina2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextAreaRotina2KeyPressed

    private void jTextAreaRotina3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaRotina3KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextAreaRotina3KeyPressed

    private void jTextAreaRotina4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaRotina4KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextAreaRotina4KeyPressed

    private void jTextAreaRotina5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaRotina5KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextAreaRotina5KeyPressed

    private void jTextAreaRotina6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaRotina6KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextAreaRotina6KeyPressed

    public void Remover(){
    try{
            //BibliotecaCTR inserirCTR = new EscolaCTR();	
            if ("".equals(jComboBoxProfessorUF.getSelectedItem()) || "".equals(jTextFieldProfessorRG.getText()) || "".equals(jTextFieldProfessorNome.getText()) || "".equals(jPasswordFieldProfessorSenha.getText())){
               JOptionPane.showMessageDialog(null,"Campos de Dados em Branco, Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
               //requestfocus();
            }else{
                VerificadorPessoaSenha1();
                }
            }
            catch(Exception e){
                //JOptionPane.showMessageDialog(null,"Campos de Dados em Branco... ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
		System.out.println(e.getMessage());
	}    
    }
    
    public void CapsLock(){
        Toolkit tk = Toolkit.getDefaultToolkit();  
        if(tk.getLockingKeyState(KeyEvent.VK_CAPS_LOCK)){
            System.out.println("caps lock ligado...");
        } 
        else{
            JOptionPane.showMessageDialog(null,"Precione a Tecla CAPS LOCK para começar a Digitar...","Informação: ",JOptionPane.INFORMATION_MESSAGE);
        }       
    }
    
    public void MostrarDadosTabelaPlanejamento(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.MostrarDadosPRS(jComboBoxProfessorUF.getSelectedItem().toString(),jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""));
            DefaultTableModel modelo = (DefaultTableModel) jTableHistorico.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                Object[] novaLinha = new Object[8];
                novaLinha[0] = rs.getInt("prs_id");
                novaLinha[1] = rs.getString("prs_data_semanal");
                novaLinha[2] = rs.getString("disciplina_nome");
                novaLinha[3] = rs.getString("prs_caderno");
                novaLinha[4] = rs.getString("periodo_nome");
                novaLinha[5] = rs.getString("classe_numero");
                novaLinha[6] = rs.getString("ensino_serie");
                novaLinha[7] = rs.getString("turma_nome");
                modelo.addRow(novaLinha);
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddDisciplina;
    private javax.swing.JButton jButtonExcluirPlanejamento;
    private javax.swing.JButton jButtonGravar;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JComboBox jComboBoxCaderno;
    private javax.swing.JComboBox jComboBoxDisciplina;
    private javax.swing.JComboBox jComboBoxDisciplina1;
    private javax.swing.JComboBox jComboBoxDisciplina2;
    private javax.swing.JComboBox jComboBoxDisciplina3;
    private javax.swing.JComboBox jComboBoxDisciplina4;
    private javax.swing.JComboBox jComboBoxDisciplina5;
    private javax.swing.JComboBox jComboBoxDisciplina6;
    private javax.swing.JComboBox jComboBoxPeriodo;
    private javax.swing.JComboBox jComboBoxProfessorUF;
    private javax.swing.JFormattedTextField jFormattedTextFieldData1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordFieldProfessorSenha;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableHistorico;
    private javax.swing.JTextArea jTextAreaRotina1;
    private javax.swing.JTextArea jTextAreaRotina2;
    private javax.swing.JTextArea jTextAreaRotina3;
    private javax.swing.JTextArea jTextAreaRotina4;
    private javax.swing.JTextArea jTextAreaRotina5;
    private javax.swing.JTextArea jTextAreaRotina6;
    private javax.swing.JTextField jTextFieldClasseNumero;
    private javax.swing.JTextField jTextFieldCodigoPRS;
    private javax.swing.JTextField jTextFieldExcluirPlanejamento;
    private javax.swing.JTextField jTextFieldProfessorNome;
    private javax.swing.JTextField jTextFieldProfessorRG;
    private javax.swing.JTextField jTextFieldSerie;
    private javax.swing.JTextField jTextFieldTurma;
    // End of variables declaration//GEN-END:variables
}
