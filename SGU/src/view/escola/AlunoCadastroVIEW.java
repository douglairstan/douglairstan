/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.escola;

import base.ctr.BaseCTR;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Douglas Estanislau Pereira
 */
public class AlunoCadastroVIEW extends javax.swing.JInternalFrame {

    SimpleDateFormat in= new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat out = new SimpleDateFormat("dd/MM/yyyy");
    
    String estadocivil = "";
    String status = "true";
    /**
     * Creates new form AlunoCadastroVIEW
     */
    public AlunoCadastroVIEW() {
        initComponents();
        Iniciar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneAluno = new javax.swing.JTabbedPane();
        jPanelDadosPessoais = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldPessoaPrenome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldPessoaSobrenome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxUF = new javax.swing.JComboBox();
        jButtonAddUF = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxSexo = new javax.swing.JComboBox();
        jButtonAddSexo = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxRacaCor = new javax.swing.JComboBox();
        jTextFieldNomeCompleto = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButtonAddRacaCor = new javax.swing.JButton();
        jTextFieldRA = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jComboBoxTipoCI = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePessoaEmpresa = new javax.swing.JTable();
        jButtonAddRemPessoaEmpresa = new javax.swing.JButton();
        jComboBoxNascimentoMultiplo = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        jTextFieldPessoaDN = new javax.swing.JFormattedTextField();
        jComboBoxCargo = new javax.swing.JComboBox();
        jComboBoxAgnome = new javax.swing.JComboBox();
        jButtonAddAgnome = new javax.swing.JButton();
        jButtonAddEmpresaCargo = new javax.swing.JButton();
        jLabel46 = new javax.swing.JLabel();
        jPanelEndereco = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxPais = new javax.swing.JComboBox();
        jButtonAddPais = new javax.swing.JButton();
        jButtonConsultarUF = new javax.swing.JButton();
        jComboBoxUFEnd = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        jButtonAddUFEnd = new javax.swing.JButton();
        jButtonConsultarCidade = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jComboBoxCidade = new javax.swing.JComboBox();
        jButtonConsultarCEP = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jComboBoxCEP = new javax.swing.JComboBox();
        jButtonAddCEP = new javax.swing.JButton();
        jComboBoxZona = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        jButtonAddCidade = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jComboBoxBairro = new javax.swing.JComboBox();
        jButtonConsultarBairro = new javax.swing.JButton();
        jButtonAddBairro = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jComboBoxLogradouro = new javax.swing.JComboBox();
        jButtonConsultarLogradouro = new javax.swing.JButton();
        jButtonAddLogradouro = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jTextFieldEndNumero = new javax.swing.JTextField();
        jTextFieldEndComplementos = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jTextFieldEndReferencia = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTablePessoaEndereco = new javax.swing.JTable();
        jPanelTelefone = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jComboBoxTelDDD = new javax.swing.JComboBox();
        jComboBoxTelOperadora = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxTelTipo = new javax.swing.JComboBox();
        jButtonAddTelDDD = new javax.swing.JButton();
        jButtonAddTelTipo = new javax.swing.JButton();
        jButtonAddTelOperadora = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldTelNumero = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextFieldTelRamal = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldTelObs = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTelefone = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldCodigoTelefone = new javax.swing.JTextField();
        jPanelRelatorio = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableRelatorios = new javax.swing.JTable();
        jPanelBiblioteca = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableBiblioteca = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanelCID = new javax.swing.JPanel();
        jPanelCertificados = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jComboBoxDiploma = new javax.swing.JComboBox();
        jLabel39 = new javax.swing.JLabel();
        jFormattedTextFieldCertificado1 = new javax.swing.JFormattedTextField();
        jLabel43 = new javax.swing.JLabel();
        jFormattedTextFieldCertificado2 = new javax.swing.JFormattedTextField();
        jRadioButtonCertificado = new javax.swing.JRadioButton();
        jRadioButtonDiploma = new javax.swing.JRadioButton();
        jComboBoxCertificado = new javax.swing.JComboBox();
        jLabel44 = new javax.swing.JLabel();
        jComboBoxCertificadora = new javax.swing.JComboBox();
        jButtonAddCertificadora = new javax.swing.JButton();
        jPanelReligiao = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jComboBoxReligiao = new javax.swing.JComboBox();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTablePessoaReligiao = new javax.swing.JTable();
        jButtonAddReligiao = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        jTextFieldPessoaReligiaoObs = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jComboBoxMedico = new javax.swing.JComboBox();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jLabel45 = new javax.swing.JLabel();
        jButtonAddMedico = new javax.swing.JButton();
        jPanelFiliacao = new javax.swing.JPanel();
        jPanelEmail = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        jTextFieldPessoa_email = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jComboBoxPessoaEmailProv = new javax.swing.JComboBox<>();
        jButtonGravarAlterar = new javax.swing.JButton();
        jButtonPesquisar = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabelRA = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabelNome = new javax.swing.JLabel();
        jButtonLimpar = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jTabbedPaneAluno.setToolTipText("");

        jPanelDadosPessoais.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelDadosPessoaisMouseMoved(evt);
            }
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanelDadosPessoaisMouseDragged(evt);
            }
        });
        jPanelDadosPessoais.setLayout(null);

        jLabel1.setText("Nome:");
        jPanelDadosPessoais.add(jLabel1);
        jLabel1.setBounds(20, 80, 60, 18);

        jTextFieldPessoaPrenome.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTextFieldPessoaPrenome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPessoaPrenomeKeyPressed(evt);
            }
        });
        jPanelDadosPessoais.add(jTextFieldPessoaPrenome);
        jTextFieldPessoaPrenome.setBounds(20, 100, 440, 35);

        jLabel2.setText("Sobrenome:");
        jPanelDadosPessoais.add(jLabel2);
        jLabel2.setBounds(470, 80, 100, 18);

        jTextFieldPessoaSobrenome.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTextFieldPessoaSobrenome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPessoaSobrenomeKeyPressed(evt);
            }
        });
        jPanelDadosPessoais.add(jTextFieldPessoaSobrenome);
        jTextFieldPessoaSobrenome.setBounds(470, 100, 200, 35);

        jLabel3.setText("Agnome:");
        jPanelDadosPessoais.add(jLabel3);
        jLabel3.setBounds(680, 80, 80, 18);

        jLabel4.setText("UF:");
        jPanelDadosPessoais.add(jLabel4);
        jLabel4.setBounds(110, 20, 51, 18);

        jComboBoxUF.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelDadosPessoais.add(jComboBoxUF);
        jComboBoxUF.setBounds(110, 40, 60, 35);

        jButtonAddUF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddUF.setToolTipText("Adicionar Unidade Federativa");
        jButtonAddUF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddUFActionPerformed(evt);
            }
        });
        jPanelDadosPessoais.add(jButtonAddUF);
        jButtonAddUF.setBounds(170, 40, 30, 26);

        jLabel5.setText("RA/RG:");
        jPanelDadosPessoais.add(jLabel5);
        jLabel5.setBounds(210, 20, 60, 18);

        jLabel6.setText("Nome Completo:");
        jPanelDadosPessoais.add(jLabel6);
        jLabel6.setBounds(20, 140, 140, 18);

        jLabel7.setText("Sexo:");
        jPanelDadosPessoais.add(jLabel7);
        jLabel7.setBounds(390, 20, 60, 18);

        jComboBoxSexo.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelDadosPessoais.add(jComboBoxSexo);
        jComboBoxSexo.setBounds(390, 40, 90, 35);

        jButtonAddSexo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddSexo.setToolTipText("Adicionar Unidade Federativa");
        jButtonAddSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddSexoActionPerformed(evt);
            }
        });
        jPanelDadosPessoais.add(jButtonAddSexo);
        jButtonAddSexo.setBounds(480, 40, 30, 26);

        jLabel8.setText("Raça/Cor:");
        jPanelDadosPessoais.add(jLabel8);
        jLabel8.setBounds(520, 20, 90, 18);

        jComboBoxRacaCor.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelDadosPessoais.add(jComboBoxRacaCor);
        jComboBoxRacaCor.setBounds(520, 40, 190, 35);

        jTextFieldNomeCompleto.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelDadosPessoais.add(jTextFieldNomeCompleto);
        jTextFieldNomeCompleto.setBounds(20, 160, 840, 35);

        jLabel9.setText("D.N.:");
        jPanelDadosPessoais.add(jLabel9);
        jLabel9.setBounds(750, 20, 60, 18);

        jButtonAddRacaCor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddRacaCor.setToolTipText("Adicionar Unidade Federativa");
        jButtonAddRacaCor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddRacaCorActionPerformed(evt);
            }
        });
        jPanelDadosPessoais.add(jButtonAddRacaCor);
        jButtonAddRacaCor.setBounds(710, 40, 30, 26);

        jTextFieldRA.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTextFieldRA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRAActionPerformed(evt);
            }
        });
        jTextFieldRA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldRAKeyPressed(evt);
            }
        });
        jPanelDadosPessoais.add(jTextFieldRA);
        jTextFieldRA.setBounds(210, 40, 170, 35);

        jLabel18.setText("Tipo:");
        jPanelDadosPessoais.add(jLabel18);
        jLabel18.setBounds(20, 20, 50, 18);

        jComboBoxTipoCI.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jComboBoxTipoCI.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "RA", "RG", "RIC", "CPF" }));
        jPanelDadosPessoais.add(jComboBoxTipoCI);
        jComboBoxTipoCI.setBounds(20, 40, 80, 35);

        jTablePessoaEmpresa.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTablePessoaEmpresa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID:", "DATA:", "EMPRESA:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePessoaEmpresa.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(jTablePessoaEmpresa);
        if (jTablePessoaEmpresa.getColumnModel().getColumnCount() > 0) {
            jTablePessoaEmpresa.getColumnModel().getColumn(0).setResizable(false);
            jTablePessoaEmpresa.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTablePessoaEmpresa.getColumnModel().getColumn(1).setResizable(false);
            jTablePessoaEmpresa.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTablePessoaEmpresa.getColumnModel().getColumn(2).setResizable(false);
            jTablePessoaEmpresa.getColumnModel().getColumn(2).setPreferredWidth(400);
        }

        jPanelDadosPessoais.add(jScrollPane3);
        jScrollPane3.setBounds(20, 300, 840, 100);

        jButtonAddRemPessoaEmpresa.setText("ADD/REM");
        jButtonAddRemPessoaEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddRemPessoaEmpresaActionPerformed(evt);
            }
        });
        jPanelDadosPessoais.add(jButtonAddRemPessoaEmpresa);
        jButtonAddRemPessoaEmpresa.setBounds(760, 410, 100, 28);

        jComboBoxNascimentoMultiplo.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelDadosPessoais.add(jComboBoxNascimentoMultiplo);
        jComboBoxNascimentoMultiplo.setBounds(20, 220, 210, 35);

        jLabel30.setText("Nascimento Múltiplo:");
        jPanelDadosPessoais.add(jLabel30);
        jLabel30.setBounds(20, 200, 160, 18);

        try {
            jTextFieldPessoaDN.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTextFieldPessoaDN.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelDadosPessoais.add(jTextFieldPessoaDN);
        jTextFieldPessoaDN.setBounds(750, 40, 110, 35);

        jComboBoxCargo.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelDadosPessoais.add(jComboBoxCargo);
        jComboBoxCargo.setBounds(610, 220, 220, 35);

        jComboBoxAgnome.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelDadosPessoais.add(jComboBoxAgnome);
        jComboBoxAgnome.setBounds(680, 100, 150, 35);

        jButtonAddAgnome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddAgnome.setToolTipText("Adicionar Unidade Federativa");
        jButtonAddAgnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddAgnomeActionPerformed(evt);
            }
        });
        jPanelDadosPessoais.add(jButtonAddAgnome);
        jButtonAddAgnome.setBounds(830, 100, 30, 26);

        jButtonAddEmpresaCargo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddEmpresaCargo.setToolTipText("Adicionar Unidade Federativa");
        jButtonAddEmpresaCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddEmpresaCargoActionPerformed(evt);
            }
        });
        jPanelDadosPessoais.add(jButtonAddEmpresaCargo);
        jButtonAddEmpresaCargo.setBounds(830, 220, 30, 26);

        jLabel46.setText("Cargo:");
        jPanelDadosPessoais.add(jLabel46);
        jLabel46.setBounds(610, 200, 70, 18);

        jTabbedPaneAluno.addTab("Dados Pessoais:", jPanelDadosPessoais);

        jPanelEndereco.setLayout(null);

        jLabel10.setText("País:");
        jPanelEndereco.add(jLabel10);
        jLabel10.setBounds(10, 20, 50, 18);

        jComboBoxPais.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelEndereco.add(jComboBoxPais);
        jComboBoxPais.setBounds(10, 40, 110, 35);

        jButtonAddPais.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddPais.setToolTipText("Adicionar País");
        jButtonAddPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPaisActionPerformed(evt);
            }
        });
        jPanelEndereco.add(jButtonAddPais);
        jButtonAddPais.setBounds(120, 40, 30, 26);

        jButtonConsultarUF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/consultar16.png"))); // NOI18N
        jButtonConsultarUF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarUFActionPerformed(evt);
            }
        });
        jPanelEndereco.add(jButtonConsultarUF);
        jButtonConsultarUF.setBounds(160, 40, 30, 26);

        jComboBoxUFEnd.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelEndereco.add(jComboBoxUFEnd);
        jComboBoxUFEnd.setBounds(190, 40, 70, 35);

        jLabel21.setText("UF:");
        jPanelEndereco.add(jLabel21);
        jLabel21.setBounds(190, 20, 60, 18);

        jButtonAddUFEnd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddUFEnd.setToolTipText("Adicionar Unidade Federativa");
        jButtonAddUFEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddUFEndActionPerformed(evt);
            }
        });
        jPanelEndereco.add(jButtonAddUFEnd);
        jButtonAddUFEnd.setBounds(260, 40, 30, 26);

        jButtonConsultarCidade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/consultar16.png"))); // NOI18N
        jButtonConsultarCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarCidadeActionPerformed(evt);
            }
        });
        jPanelEndereco.add(jButtonConsultarCidade);
        jButtonConsultarCidade.setBounds(300, 40, 30, 26);

        jLabel22.setText("Município/Cidade:");
        jPanelEndereco.add(jLabel22);
        jLabel22.setBounds(330, 20, 160, 18);

        jComboBoxCidade.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelEndereco.add(jComboBoxCidade);
        jComboBoxCidade.setBounds(330, 40, 320, 35);

        jButtonConsultarCEP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/consultar16.png"))); // NOI18N
        jButtonConsultarCEP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarCEPActionPerformed(evt);
            }
        });
        jPanelEndereco.add(jButtonConsultarCEP);
        jButtonConsultarCEP.setBounds(690, 40, 30, 26);

        jLabel23.setText("CEP:");
        jPanelEndereco.add(jLabel23);
        jLabel23.setBounds(720, 20, 50, 18);

        jComboBoxCEP.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelEndereco.add(jComboBoxCEP);
        jComboBoxCEP.setBounds(720, 40, 120, 35);

        jButtonAddCEP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddCEP.setToolTipText("Adicionar CEP");
        jButtonAddCEP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddCEPActionPerformed(evt);
            }
        });
        jPanelEndereco.add(jButtonAddCEP);
        jButtonAddCEP.setBounds(840, 40, 30, 26);

        jComboBoxZona.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jComboBoxZona.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "URBANA", "RURAL" }));
        jPanelEndereco.add(jComboBoxZona);
        jComboBoxZona.setBounds(10, 100, 110, 35);

        jLabel24.setText("Zona:");
        jPanelEndereco.add(jLabel24);
        jLabel24.setBounds(10, 80, 57, 18);

        jButtonAddCidade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddCidade.setToolTipText("Adicionar Cidade");
        jButtonAddCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddCidadeActionPerformed(evt);
            }
        });
        jPanelEndereco.add(jButtonAddCidade);
        jButtonAddCidade.setBounds(650, 40, 30, 26);

        jLabel25.setText("Bairro/Distrito:");
        jPanelEndereco.add(jLabel25);
        jLabel25.setBounds(160, 80, 120, 18);

        jComboBoxBairro.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelEndereco.add(jComboBoxBairro);
        jComboBoxBairro.setBounds(160, 100, 200, 35);

        jButtonConsultarBairro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/consultar16.png"))); // NOI18N
        jButtonConsultarBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarBairroActionPerformed(evt);
            }
        });
        jPanelEndereco.add(jButtonConsultarBairro);
        jButtonConsultarBairro.setBounds(130, 100, 30, 26);

        jButtonAddBairro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddBairro.setToolTipText("Adicionar Bairro");
        jButtonAddBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddBairroActionPerformed(evt);
            }
        });
        jPanelEndereco.add(jButtonAddBairro);
        jButtonAddBairro.setBounds(360, 100, 30, 26);

        jLabel26.setText("Logradouro:");
        jPanelEndereco.add(jLabel26);
        jLabel26.setBounds(430, 80, 110, 18);

        jComboBoxLogradouro.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelEndereco.add(jComboBoxLogradouro);
        jComboBoxLogradouro.setBounds(430, 100, 410, 35);

        jButtonConsultarLogradouro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/consultar16.png"))); // NOI18N
        jButtonConsultarLogradouro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarLogradouroActionPerformed(evt);
            }
        });
        jPanelEndereco.add(jButtonConsultarLogradouro);
        jButtonConsultarLogradouro.setBounds(400, 100, 30, 26);

        jButtonAddLogradouro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddLogradouro.setToolTipText("Adicionar Logradouro");
        jButtonAddLogradouro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddLogradouroActionPerformed(evt);
            }
        });
        jPanelEndereco.add(jButtonAddLogradouro);
        jButtonAddLogradouro.setBounds(840, 100, 30, 26);

        jLabel27.setText("Complemento:");
        jPanelEndereco.add(jLabel27);
        jLabel27.setBounds(130, 140, 120, 18);

        jLabel28.setText("N°:");
        jPanelEndereco.add(jLabel28);
        jLabel28.setBounds(10, 140, 30, 18);

        jTextFieldEndNumero.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelEndereco.add(jTextFieldEndNumero);
        jTextFieldEndNumero.setBounds(10, 160, 110, 35);

        jTextFieldEndComplementos.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelEndereco.add(jTextFieldEndComplementos);
        jTextFieldEndComplementos.setBounds(130, 160, 300, 35);

        jLabel29.setText("Referência:");
        jPanelEndereco.add(jLabel29);
        jLabel29.setBounds(440, 140, 100, 18);

        jTextFieldEndReferencia.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelEndereco.add(jTextFieldEndReferencia);
        jTextFieldEndReferencia.setBounds(440, 160, 430, 27);

        jScrollPane5.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N

        jTablePessoaEndereco.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTablePessoaEndereco.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data:", "UF:", "Cidade:", "Bairro:", "Logradouro:", "N°:", "Complemento:", "CEP:", "Referência:", "País:", "Zona:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePessoaEndereco.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane5.setViewportView(jTablePessoaEndereco);
        if (jTablePessoaEndereco.getColumnModel().getColumnCount() > 0) {
            jTablePessoaEndereco.getColumnModel().getColumn(0).setResizable(false);
            jTablePessoaEndereco.getColumnModel().getColumn(0).setPreferredWidth(120);
            jTablePessoaEndereco.getColumnModel().getColumn(1).setResizable(false);
            jTablePessoaEndereco.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTablePessoaEndereco.getColumnModel().getColumn(2).setResizable(false);
            jTablePessoaEndereco.getColumnModel().getColumn(2).setPreferredWidth(250);
            jTablePessoaEndereco.getColumnModel().getColumn(3).setResizable(false);
            jTablePessoaEndereco.getColumnModel().getColumn(3).setPreferredWidth(200);
            jTablePessoaEndereco.getColumnModel().getColumn(4).setResizable(false);
            jTablePessoaEndereco.getColumnModel().getColumn(4).setPreferredWidth(300);
            jTablePessoaEndereco.getColumnModel().getColumn(5).setResizable(false);
            jTablePessoaEndereco.getColumnModel().getColumn(5).setPreferredWidth(70);
            jTablePessoaEndereco.getColumnModel().getColumn(6).setResizable(false);
            jTablePessoaEndereco.getColumnModel().getColumn(6).setPreferredWidth(200);
            jTablePessoaEndereco.getColumnModel().getColumn(7).setResizable(false);
            jTablePessoaEndereco.getColumnModel().getColumn(7).setPreferredWidth(120);
            jTablePessoaEndereco.getColumnModel().getColumn(8).setResizable(false);
            jTablePessoaEndereco.getColumnModel().getColumn(8).setPreferredWidth(200);
            jTablePessoaEndereco.getColumnModel().getColumn(9).setResizable(false);
            jTablePessoaEndereco.getColumnModel().getColumn(9).setPreferredWidth(100);
            jTablePessoaEndereco.getColumnModel().getColumn(10).setResizable(false);
            jTablePessoaEndereco.getColumnModel().getColumn(10).setPreferredWidth(100);
        }

        jPanelEndereco.add(jScrollPane5);
        jScrollPane5.setBounds(10, 200, 860, 250);

        jTabbedPaneAluno.addTab("Endereços:", jPanelEndereco);

        jPanelTelefone.setLayout(null);

        jButton5.setText("jButton5");
        jPanelTelefone.add(jButton5);
        jButton5.setBounds(590, 490, 70, 28);

        jLabel11.setText("DDD:");
        jPanelTelefone.add(jLabel11);
        jLabel11.setBounds(460, 20, 60, 18);

        jLabel12.setText("Operadora:");
        jPanelTelefone.add(jLabel12);
        jLabel12.setBounds(250, 20, 90, 18);

        jComboBoxTelDDD.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelTelefone.add(jComboBoxTelDDD);
        jComboBoxTelDDD.setBounds(460, 40, 80, 35);

        jComboBoxTelOperadora.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelTelefone.add(jComboBoxTelOperadora);
        jComboBoxTelOperadora.setBounds(250, 40, 170, 35);

        jLabel13.setText("Tipo:");
        jPanelTelefone.add(jLabel13);
        jLabel13.setBounds(20, 20, 70, 18);

        jComboBoxTelTipo.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelTelefone.add(jComboBoxTelTipo);
        jComboBoxTelTipo.setBounds(20, 40, 190, 27);

        jButtonAddTelDDD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddTelDDD.setToolTipText("Adicionar Unidade Federativa");
        jButtonAddTelDDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddTelDDDActionPerformed(evt);
            }
        });
        jPanelTelefone.add(jButtonAddTelDDD);
        jButtonAddTelDDD.setBounds(540, 40, 30, 26);

        jButtonAddTelTipo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddTelTipo.setToolTipText("Adicionar Unidade Federativa");
        jButtonAddTelTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddTelTipoActionPerformed(evt);
            }
        });
        jPanelTelefone.add(jButtonAddTelTipo);
        jButtonAddTelTipo.setBounds(210, 40, 30, 26);

        jButtonAddTelOperadora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddTelOperadora.setToolTipText("Adicionar Unidade Federativa");
        jButtonAddTelOperadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddTelOperadoraActionPerformed(evt);
            }
        });
        jPanelTelefone.add(jButtonAddTelOperadora);
        jButtonAddTelOperadora.setBounds(420, 40, 30, 26);

        jLabel14.setText("Número:");
        jPanelTelefone.add(jLabel14);
        jLabel14.setBounds(580, 20, 80, 18);

        jTextFieldTelNumero.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelTelefone.add(jTextFieldTelNumero);
        jTextFieldTelNumero.setBounds(580, 40, 160, 35);

        jLabel15.setText("Ramal:");
        jPanelTelefone.add(jLabel15);
        jLabel15.setBounds(750, 20, 70, 18);

        jTextFieldTelRamal.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelTelefone.add(jTextFieldTelRamal);
        jTextFieldTelRamal.setBounds(750, 40, 60, 35);

        jLabel16.setText("Obs:");
        jPanelTelefone.add(jLabel16);
        jLabel16.setBounds(20, 80, 50, 18);

        jTextFieldTelObs.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelTelefone.add(jTextFieldTelObs);
        jTextFieldTelObs.setBounds(20, 100, 790, 35);

        jTableTelefone.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTableTelefone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código:", "Data:", "Tipo:", "Op.:", "DDD:", "Número:", "Ramal:", "Obs:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableTelefone.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jTableTelefone);
        if (jTableTelefone.getColumnModel().getColumnCount() > 0) {
            jTableTelefone.getColumnModel().getColumn(0).setResizable(false);
            jTableTelefone.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTableTelefone.getColumnModel().getColumn(1).setResizable(false);
            jTableTelefone.getColumnModel().getColumn(1).setPreferredWidth(90);
            jTableTelefone.getColumnModel().getColumn(2).setResizable(false);
            jTableTelefone.getColumnModel().getColumn(2).setPreferredWidth(110);
            jTableTelefone.getColumnModel().getColumn(3).setResizable(false);
            jTableTelefone.getColumnModel().getColumn(3).setPreferredWidth(80);
            jTableTelefone.getColumnModel().getColumn(4).setResizable(false);
            jTableTelefone.getColumnModel().getColumn(4).setPreferredWidth(50);
            jTableTelefone.getColumnModel().getColumn(5).setResizable(false);
            jTableTelefone.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTableTelefone.getColumnModel().getColumn(6).setResizable(false);
            jTableTelefone.getColumnModel().getColumn(6).setPreferredWidth(70);
            jTableTelefone.getColumnModel().getColumn(7).setResizable(false);
            jTableTelefone.getColumnModel().getColumn(7).setPreferredWidth(300);
        }

        jPanelTelefone.add(jScrollPane1);
        jScrollPane1.setBounds(20, 140, 840, 270);

        jLabel20.setText("Código:");
        jPanelTelefone.add(jLabel20);
        jLabel20.setBounds(20, 420, 70, 18);

        jTextFieldCodigoTelefone.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTextFieldCodigoTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCodigoTelefoneKeyPressed(evt);
            }
        });
        jPanelTelefone.add(jTextFieldCodigoTelefone);
        jTextFieldCodigoTelefone.setBounds(80, 420, 60, 35);

        jTabbedPaneAluno.addTab("Telefones:", jPanelTelefone);

        jPanelRelatorio.setLayout(null);

        jTableRelatorios.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTableRelatorios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código:", "Data:", "Docente:", "Tipo1:", "Tipo2:", "Escola:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableRelatorios.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane4.setViewportView(jTableRelatorios);
        if (jTableRelatorios.getColumnModel().getColumnCount() > 0) {
            jTableRelatorios.getColumnModel().getColumn(0).setResizable(false);
            jTableRelatorios.getColumnModel().getColumn(0).setPreferredWidth(60);
            jTableRelatorios.getColumnModel().getColumn(1).setResizable(false);
            jTableRelatorios.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTableRelatorios.getColumnModel().getColumn(2).setResizable(false);
            jTableRelatorios.getColumnModel().getColumn(2).setPreferredWidth(300);
            jTableRelatorios.getColumnModel().getColumn(3).setResizable(false);
            jTableRelatorios.getColumnModel().getColumn(3).setPreferredWidth(150);
            jTableRelatorios.getColumnModel().getColumn(4).setResizable(false);
            jTableRelatorios.getColumnModel().getColumn(4).setPreferredWidth(150);
            jTableRelatorios.getColumnModel().getColumn(5).setResizable(false);
            jTableRelatorios.getColumnModel().getColumn(5).setPreferredWidth(250);
        }

        jPanelRelatorio.add(jScrollPane4);
        jScrollPane4.setBounds(10, 10, 860, 430);

        jTabbedPaneAluno.addTab("Relatórios:", jPanelRelatorio);

        jPanelBiblioteca.setLayout(null);

        jTableBiblioteca.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTableBiblioteca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código:", "Data:", "Tombo:", "Nome do Acervo:", "Escola:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableBiblioteca.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jTableBiblioteca);
        if (jTableBiblioteca.getColumnModel().getColumnCount() > 0) {
            jTableBiblioteca.getColumnModel().getColumn(0).setResizable(false);
            jTableBiblioteca.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTableBiblioteca.getColumnModel().getColumn(1).setResizable(false);
            jTableBiblioteca.getColumnModel().getColumn(1).setPreferredWidth(120);
            jTableBiblioteca.getColumnModel().getColumn(2).setResizable(false);
            jTableBiblioteca.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTableBiblioteca.getColumnModel().getColumn(3).setResizable(false);
            jTableBiblioteca.getColumnModel().getColumn(3).setPreferredWidth(500);
            jTableBiblioteca.getColumnModel().getColumn(4).setResizable(false);
            jTableBiblioteca.getColumnModel().getColumn(4).setPreferredWidth(300);
        }

        jPanelBiblioteca.add(jScrollPane2);
        jScrollPane2.setBounds(10, 10, 860, 430);

        jTabbedPaneAluno.addTab("Biblioteca:", jPanelBiblioteca);
        jTabbedPaneAluno.addTab("Saúde:", jPanel1);

        jPanelCID.setLayout(null);
        jTabbedPaneAluno.addTab("CID:", jPanelCID);

        jPanelCertificados.setLayout(null);

        jLabel31.setText("Carga Horária:");
        jPanelCertificados.add(jLabel31);
        jLabel31.setBounds(200, 180, 120, 18);

        jLabel32.setText("Data:");
        jPanelCertificados.add(jLabel32);
        jLabel32.setBounds(210, 230, 70, 18);

        jLabel33.setText("Certificadora:");
        jPanelCertificados.add(jLabel33);
        jLabel33.setBounds(260, 350, 110, 18);

        jLabel34.setText("Obs:");
        jPanelCertificados.add(jLabel34);
        jLabel34.setBounds(310, 250, 32, 18);

        jLabel35.setText("Período:");
        jPanelCertificados.add(jLabel35);
        jLabel35.setBounds(20, 130, 80, 18);

        jLabel36.setText("Curso/Tema:");
        jPanelCertificados.add(jLabel36);
        jLabel36.setBounds(510, 260, 110, 18);

        jLabel37.setText("Sub Curso/Tema:");
        jPanelCertificados.add(jLabel37);
        jLabel37.setBounds(530, 300, 130, 18);

        jLabel38.setText("Tipo Curso:");
        jPanelCertificados.add(jLabel38);
        jLabel38.setBounds(160, 10, 100, 18);

        jComboBoxDiploma.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jComboBoxDiploma.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BACHAREL", "POS BACHAREL", "MESTRADO", "POS MESTRADO", "DOUTORADO", "POS DOUTORADO" }));
        jPanelCertificados.add(jComboBoxDiploma);
        jComboBoxDiploma.setBounds(580, 30, 220, 35);

        jLabel39.setText("Tipo:");
        jPanelCertificados.add(jLabel39);
        jLabel39.setBounds(10, 10, 50, 18);

        try {
            jFormattedTextFieldCertificado1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldCertificado1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jFormattedTextFieldCertificado1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldCertificado1ActionPerformed(evt);
            }
        });
        jPanelCertificados.add(jFormattedTextFieldCertificado1);
        jFormattedTextFieldCertificado1.setBounds(10, 90, 100, 35);

        jLabel43.setText("à");
        jPanelCertificados.add(jLabel43);
        jLabel43.setBounds(120, 100, 20, 18);

        try {
            jFormattedTextFieldCertificado2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldCertificado2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jFormattedTextFieldCertificado2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldCertificado2ActionPerformed(evt);
            }
        });
        jPanelCertificados.add(jFormattedTextFieldCertificado2);
        jFormattedTextFieldCertificado2.setBounds(140, 90, 100, 35);

        jRadioButtonCertificado.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jRadioButtonCertificado.setText("Certificado");
        jPanelCertificados.add(jRadioButtonCertificado);
        jRadioButtonCertificado.setBounds(50, 10, 126, 23);

        jRadioButtonDiploma.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jRadioButtonDiploma.setText("Diploma");
        jRadioButtonDiploma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDiplomaActionPerformed(evt);
            }
        });
        jPanelCertificados.add(jRadioButtonDiploma);
        jRadioButtonDiploma.setBounds(50, 40, 83, 23);

        jComboBoxCertificado.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jComboBoxCertificado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PRESENCIAL", "A DISTÂNCIA" }));
        jPanelCertificados.add(jComboBoxCertificado);
        jComboBoxCertificado.setBounds(600, 140, 220, 35);

        jLabel44.setText("Tipo Graduação:");
        jPanelCertificados.add(jLabel44);
        jLabel44.setBounds(160, 40, 130, 18);

        jComboBoxCertificadora.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelCertificados.add(jComboBoxCertificadora);
        jComboBoxCertificadora.setBounds(380, 350, 410, 35);

        jButtonAddCertificadora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddCertificadora.setToolTipText("Adicionar Unidade Federativa");
        jButtonAddCertificadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddCertificadoraActionPerformed(evt);
            }
        });
        jPanelCertificados.add(jButtonAddCertificadora);
        jButtonAddCertificadora.setBounds(790, 350, 30, 26);

        jTabbedPaneAluno.addTab("Certificado/Diploma:", jPanelCertificados);

        jPanelReligiao.setLayout(null);

        jLabel40.setText("Religião:");
        jPanelReligiao.add(jLabel40);
        jLabel40.setBounds(10, 10, 80, 18);

        jComboBoxReligiao.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelReligiao.add(jComboBoxReligiao);
        jComboBoxReligiao.setBounds(10, 30, 420, 35);

        jTablePessoaReligiao.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTablePessoaReligiao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID:", "Data:", "Religião:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePessoaReligiao.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(jTablePessoaReligiao);
        if (jTablePessoaReligiao.getColumnModel().getColumnCount() > 0) {
            jTablePessoaReligiao.getColumnModel().getColumn(0).setResizable(false);
            jTablePessoaReligiao.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTablePessoaReligiao.getColumnModel().getColumn(1).setResizable(false);
            jTablePessoaReligiao.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTablePessoaReligiao.getColumnModel().getColumn(2).setResizable(false);
            jTablePessoaReligiao.getColumnModel().getColumn(2).setPreferredWidth(400);
        }

        jPanelReligiao.add(jScrollPane6);
        jScrollPane6.setBounds(10, 130, 950, 310);

        jButtonAddReligiao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddReligiao.setToolTipText("Adicionar Unidade Federativa");
        jButtonAddReligiao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddReligiaoActionPerformed(evt);
            }
        });
        jPanelReligiao.add(jButtonAddReligiao);
        jButtonAddReligiao.setBounds(430, 30, 30, 26);

        jLabel41.setText("Obs:");
        jPanelReligiao.add(jLabel41);
        jLabel41.setBounds(10, 70, 32, 18);

        jTextFieldPessoaReligiaoObs.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelReligiao.add(jTextFieldPessoaReligiaoObs);
        jTextFieldPessoaReligiaoObs.setBounds(10, 90, 940, 35);

        jTabbedPaneAluno.addTab("Religião:", jPanelReligiao);

        jPanel2.setLayout(null);

        jLabel42.setText("Data:");
        jPanel2.add(jLabel42);
        jLabel42.setBounds(350, 80, 37, 18);

        jComboBoxMedico.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanel2.add(jComboBoxMedico);
        jComboBoxMedico.setBounds(280, 310, 290, 35);

        try {
            jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanel2.add(jFormattedTextField1);
        jFormattedTextField1.setBounds(390, 80, 110, 35);

        jLabel45.setText("Médico(a):");
        jPanel2.add(jLabel45);
        jLabel45.setBounds(200, 320, 80, 18);

        jButtonAddMedico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/16x16/add16.png"))); // NOI18N
        jButtonAddMedico.setToolTipText("Adicionar Unidade Federativa");
        jButtonAddMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddMedicoActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonAddMedico);
        jButtonAddMedico.setBounds(570, 310, 30, 26);

        jTabbedPaneAluno.addTab("Atestado:", jPanel2);
        jTabbedPaneAluno.addTab("Filiação:", jPanelFiliacao);

        jPanelEmail.setLayout(null);

        jLabel47.setText("E-mail:");
        jPanelEmail.add(jLabel47);
        jLabel47.setBounds(20, 20, 47, 18);

        jTextFieldPessoa_email.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelEmail.add(jTextFieldPessoa_email);
        jTextFieldPessoa_email.setBounds(10, 40, 420, 35);

        jLabel48.setText("Provedor:");
        jPanelEmail.add(jLabel48);
        jLabel48.setBounds(470, 20, 100, 18);

        jLabel49.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel49.setText("@");
        jPanelEmail.add(jLabel49);
        jLabel49.setBounds(440, 50, 20, 18);

        jComboBoxPessoaEmailProv.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jPanelEmail.add(jComboBoxPessoaEmailProv);
        jComboBoxPessoaEmailProv.setBounds(470, 40, 430, 35);

        jTabbedPaneAluno.addTab("E-mail:", jPanelEmail);

        getContentPane().add(jTabbedPaneAluno);
        jTabbedPaneAluno.setBounds(0, 80, 980, 580);

        jButtonGravarAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/48x48/Gravar48.png"))); // NOI18N
        jButtonGravarAlterar.setToolTipText("Gravar ou Alterar Aluno");
        jButtonGravarAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGravarAlterarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonGravarAlterar);
        jButtonGravarAlterar.setBounds(0, 0, 80, 80);

        jButtonPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/48x48/Consultar48.png"))); // NOI18N
        jButtonPesquisar.setToolTipText("Pesquisar Aluno");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonPesquisar);
        jButtonPesquisar.setBounds(160, 0, 80, 80);

        jButtonSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/48x48/Sair48.png"))); // NOI18N
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSair);
        jButtonSair.setBounds(240, 0, 80, 80);

        jLabel17.setText("RA/RG:");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(340, 20, 70, 18);

        jLabelRA.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jLabelRA);
        jLabelRA.setBounds(400, 20, 260, 17);

        jLabel19.setText("Nome:");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(340, 40, 70, 18);

        jLabelNome.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jLabelNome);
        jLabelNome.setBounds(400, 40, 440, 17);

        jButtonLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/48x48/Limpar48.png"))); // NOI18N
        jButtonLimpar.setToolTipText("Limpar Campos");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonLimpar);
        jButtonLimpar.setBounds(80, 0, 80, 80);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGravarAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGravarAlterarActionPerformed
        // TODO add your handling code here:
        //VerificadorPessoa();
        MododeGravacao();
    }//GEN-LAST:event_jButtonGravarAlterarActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        PesquisarAluno();
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        // TODO add your handling code here:
        Sair();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jTextFieldPessoaPrenomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPessoaPrenomeKeyPressed
        // TODO add your handling code here:
        NomeCompleto();
    }//GEN-LAST:event_jTextFieldPessoaPrenomeKeyPressed

    private void jTextFieldPessoaSobrenomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPessoaSobrenomeKeyPressed
        // TODO add your handling code here:
        NomeCompleto();
    }//GEN-LAST:event_jTextFieldPessoaSobrenomeKeyPressed

    private void jButtonAddUFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddUFActionPerformed
        // TODO add your handling code here:
        InserirUF();
    }//GEN-LAST:event_jButtonAddUFActionPerformed

    private void jTextFieldRAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRAKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER){
          LimparCampos2();
          //ConsultarAluno();
          VerificadorPessoaStatus();
          MostrarDadosTabelaAlunoBiblioteca();
          MostrarDadosTabelaTelefone();
          MostrarDadosTabelaRelatoriosAluno();
          MostrarDadosTabelaEndereco();
          MostrarDadosPessoaReligiao();
          //ConsultarAluno();
          MostrarDadosTabelaPessoaEmpresa();
       }
    }//GEN-LAST:event_jTextFieldRAKeyPressed

    private void jButtonAddTelDDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddTelDDDActionPerformed
        // TODO add your handling code here:
        InserirTelefoneDDD();
    }//GEN-LAST:event_jButtonAddTelDDDActionPerformed

    private void jButtonAddTelTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddTelTipoActionPerformed
        // TODO add your handling code here:
        InserirTelefoneTipo();
    }//GEN-LAST:event_jButtonAddTelTipoActionPerformed

    private void jButtonAddTelOperadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddTelOperadoraActionPerformed
        // TODO add your handling code here:
        InserirTelefoneOperadora();
    }//GEN-LAST:event_jButtonAddTelOperadoraActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        // TODO add your handling code here:
        //InserirTelefoneDDD();
        LimparCampos();
        LimparCampos2();
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
        jTextFieldRA.requestFocus();
    }//GEN-LAST:event_formInternalFrameActivated

    private void jTextFieldCodigoTelefoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodigoTelefoneKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER){
          RemoverTelefonePessoa();
          MostrarDadosTabelaTelefone();
       }
    }//GEN-LAST:event_jTextFieldCodigoTelefoneKeyPressed

    private void jButtonAddPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPaisActionPerformed
        // TODO add your handling code here:
        InserirPais();
    }//GEN-LAST:event_jButtonAddPaisActionPerformed

    private void jButtonConsultarUFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarUFActionPerformed
        // TODO add your handling code here:
        //MostrarDadosClasse();
        ConsultarUF2();
    }//GEN-LAST:event_jButtonConsultarUFActionPerformed

    private void jButtonAddUFEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddUFEndActionPerformed
        // TODO add your handling code here:
        InserirUF2();
    }//GEN-LAST:event_jButtonAddUFEndActionPerformed

    private void jButtonConsultarCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarCidadeActionPerformed
        // TODO add your handling code here:
        ConsultarCidade();
    }//GEN-LAST:event_jButtonConsultarCidadeActionPerformed

    private void jButtonConsultarCEPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarCEPActionPerformed
        // TODO add your handling code here:
        ConsultarCEP();
    }//GEN-LAST:event_jButtonConsultarCEPActionPerformed

    private void jButtonAddCEPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddCEPActionPerformed
        // TODO add your handling code here:
        InserirCEP();
    }//GEN-LAST:event_jButtonAddCEPActionPerformed

    private void jButtonAddCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddCidadeActionPerformed
        // TODO add your handling code here:
        InserirCidade();
    }//GEN-LAST:event_jButtonAddCidadeActionPerformed

    private void jButtonConsultarBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarBairroActionPerformed
        // TODO add your handling code here:
        ConsultarBairro();
    }//GEN-LAST:event_jButtonConsultarBairroActionPerformed

    private void jButtonAddBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddBairroActionPerformed
        // TODO add your handling code here:
        InserirBairro();
    }//GEN-LAST:event_jButtonAddBairroActionPerformed

    private void jButtonConsultarLogradouroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarLogradouroActionPerformed
        // TODO add your handling code here:
        ConsultarLogradouro();
    }//GEN-LAST:event_jButtonConsultarLogradouroActionPerformed

    private void jButtonAddLogradouroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddLogradouroActionPerformed
        // TODO add your handling code here:
        InserirLogradouro();
    }//GEN-LAST:event_jButtonAddLogradouroActionPerformed

    private void jButtonAddRemPessoaEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddRemPessoaEmpresaActionPerformed
        // TODO add your handling code here:
        VerificarPessoaEmpresa();
    }//GEN-LAST:event_jButtonAddRemPessoaEmpresaActionPerformed

    private void jTextFieldRAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldRAActionPerformed

    private void jFormattedTextFieldCertificado1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldCertificado1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldCertificado1ActionPerformed

    private void jFormattedTextFieldCertificado2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldCertificado2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldCertificado2ActionPerformed

    private void jRadioButtonDiplomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDiplomaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonDiplomaActionPerformed

    private void jButtonAddSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddSexoActionPerformed
        // TODO add your handling code here:
        InserirSexo();
    }//GEN-LAST:event_jButtonAddSexoActionPerformed

    private void jButtonAddRacaCorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddRacaCorActionPerformed
        // TODO add your handling code here:
        InserirRacaCor();
    }//GEN-LAST:event_jButtonAddRacaCorActionPerformed

    private void jButtonAddReligiaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddReligiaoActionPerformed
        // TODO add your handling code here:
        InserirReligiao();
    }//GEN-LAST:event_jButtonAddReligiaoActionPerformed

    private void jButtonAddCertificadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddCertificadoraActionPerformed
        // TODO add your handling code here:
        InserirCertificadora();
    }//GEN-LAST:event_jButtonAddCertificadoraActionPerformed

    private void jButtonAddMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddMedicoActionPerformed
        // TODO add your handling code here:
        InserirMedico();
    }//GEN-LAST:event_jButtonAddMedicoActionPerformed

    private void jButtonAddAgnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddAgnomeActionPerformed
        // TODO add your handling code here:
        InserirAgnome();
    }//GEN-LAST:event_jButtonAddAgnomeActionPerformed

    private void jPanelDadosPessoaisMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelDadosPessoaisMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanelDadosPessoaisMouseDragged

    private void jPanelDadosPessoaisMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelDadosPessoaisMouseMoved
        // TODO add your handling code here:
        NomeCompleto();
    }//GEN-LAST:event_jPanelDadosPessoaisMouseMoved

    private void jButtonAddEmpresaCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddEmpresaCargoActionPerformed
        // TODO add your handling code here:
        InserirEmpresaCargo();
    }//GEN-LAST:event_jButtonAddEmpresaCargoActionPerformed

    public void VerificarPessoaEmpresa(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.VerificarPessoaEmpresa(jComboBoxUF.getSelectedItem().toString(), jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""));
            String g = "t";
            while(rs.next()){       
                g = (rs.getString("rpe_status"));
                //System.out.println(g);
            }
            if ("t".equals(g)){
                status = "false";
                InserirPessoaEmpresa();
                AlterarPessoaEmpresa();
                //System.out.println("true");
                MostrarDadosTabelaPessoaEmpresa();
            }else{
                status = "true";
                InserirPessoaEmpresa();
                AlterarPessoaEmpresa();
                //System.out.println("false");
                MostrarDadosTabelaPessoaEmpresa();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void AlterarPessoaEmpresa(){
    try{
            BaseCTR alterarCTR = new BaseCTR();	
            if ("".equals(jComboBoxUF.getSelectedItem()) || "".equals(jTextFieldRA.getText())){
               JOptionPane.showMessageDialog(null,"Campos de Dados em Branco, Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
               jTextFieldRA.requestFocus();
            }else{
                int i = JOptionPane.showConfirmDialog(null, "Deseja Vincular/Desvincular esta Pessoa? ","Informação: ", JOptionPane.YES_NO_OPTION);
                if(i == JOptionPane.YES_OPTION){
                    alterarCTR.AlterarPessoaEmpresa(status, jComboBoxUF.getSelectedItem().toString(), jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""));
                    JOptionPane.showMessageDialog(null,"Pessoa Vinculada/Desvinculada com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                    //LimparCampos();
                }
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,"Campos de Dados em Branco... ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
		System.out.println(e.getMessage());
	}    
    }
    
    public void InserirPessoaEmpresa(){
    try{
            BaseCTR alterarCTR = new BaseCTR();	
            alterarCTR.InserirPessoaEmpresa(jComboBoxUF.getSelectedItem().toString(), jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""));    
       }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Campos de Dados em Branco... ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            System.out.println(e.getMessage());
	}    
    }
    
    public void PesquisarAluno(){
        AlunoConsultaDIALOG jDialog = new AlunoConsultaDIALOG(null, true);
        jDialog.setModal(true);
        jDialog.setVisible(true);
        jComboBoxUF.setSelectedItem(jDialog.getGetuf());
        jTextFieldRA.setText(jDialog.getGetid());
          //LimparCampos2();
          //VerificadorPessoaStatus();
          //MostrarDadosTabelaAlunoBiblioteca();
          //MostrarDadosTabelaTelefone();
          //MostrarDadosTabelaRelatoriosAluno();
          //MostrarDadosTabelaEndereco();
    }
    
    public void Iniciar(){
        Dimension tela = Toolkit.getDefaultToolkit().getScreenSize();
        int lar = (int) tela.getWidth();
        int alt = (int) tela.getHeight();
        this.setSize((int) (lar*0.8), (int) (alt*0.8));
        this.setTitle("Cadastro de Pessoas");
        jTextFieldNomeCompleto.setEnabled(false);
        //jTabbedPane1.setSelectedIndex(0);
        ConsultarPais();
        ConsultarUF();
        ConsultarSexo();
        ConsultarNascimentoMultiplo();
        ConsultarRacaCor();
        ConsultarAgnome();
        ConsultarEmpresaCargo();
        ConsultarTelefoneTipo();
        ConsultarTelefoneOperadora();
        ConsultarTelefoneDDD();
        ConsultarReligiao();
        ConsultarCertificadora();
        ConsultarMedico();
    }
    
    public void NomeCompleto(){
        jTextFieldNomeCompleto.setText(jTextFieldPessoaPrenome.getText()+" "+jTextFieldPessoaSobrenome.getText().replace(" ", "")+" "+jComboBoxAgnome.getSelectedItem().toString());
    }
    
    public void Sair(){
        this.dispose();
    }
    
    
    public void InserirPessoa(){
    try{
            BaseCTR inserirCTR = new BaseCTR();	
            if ("".equals(jComboBoxUF.getSelectedItem()) || "".equals(jTextFieldRA.getText()) || "".equals(jTextFieldPessoaPrenome.getText()) || "".equals(jTextFieldPessoaSobrenome.getText()) || "  /  /    ".equals(jTextFieldPessoaDN.getText()) || "".equals(jComboBoxSexo.getSelectedItem())){
               JOptionPane.showMessageDialog(null,"Campos de Dados em Branco, Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
               jTextFieldRA.requestFocus();
            }else{
                int i = JOptionPane.showConfirmDialog(null, "Deseja Inserir "+jTextFieldNomeCompleto.getText()+" ?","Informação: ", JOptionPane.YES_NO_OPTION);
                if(i == JOptionPane.YES_OPTION){
                    inserirCTR.InserirPessoaAluno(jComboBoxUF.getSelectedItem().toString(), jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""),jComboBoxTipoCI.getSelectedItem().toString() ,jTextFieldPessoaPrenome.getText().toUpperCase(), jTextFieldPessoaSobrenome.getText().toUpperCase().replace(" ", ""), jComboBoxAgnome.getSelectedItem().toString(), jTextFieldNomeCompleto.getText().toUpperCase().replace("  ", "").replace("Á", "A").replace("á", "A").replace("É", "E").replace("é", "E").replace("Í", "I").replace("í", "I").replace("ã", "A").replace("Ã", "A").replace("Ó", "O").replace("ó", "O"), jTextFieldPessoaDN.getText(),jComboBoxSexo.getSelectedItem().toString(),jComboBoxRacaCor.getSelectedItem().toString(),estadocivil, jComboBoxNascimentoMultiplo.getSelectedItem().toString(),jComboBoxCargo.getSelectedItem().toString());
                    JOptionPane.showMessageDialog(null,""+jTextFieldNomeCompleto.getText()+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                    LimparCampos();
                }
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,"Campos de Dados em Branco... ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
		System.out.println(e.getMessage());
	}    
    }
    
    public void AlterarPessoa(){
    try{
            BaseCTR alterarCTR = new BaseCTR();	
            if ("".equals(jComboBoxUF.getSelectedItem()) || "".equals(jTextFieldRA.getText()) || "".equals(jTextFieldPessoaPrenome.getText()) || "".equals(jTextFieldPessoaSobrenome.getText()) || "".equals(jTextFieldPessoaDN.getText()) || "".equals(jComboBoxSexo.getSelectedItem())){
               JOptionPane.showMessageDialog(null,"Campos de Dados em Branco, Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
               jTextFieldRA.requestFocus();
            }else{
                int i = JOptionPane.showConfirmDialog(null, "Deseja Alterar "+jTextFieldNomeCompleto.getText()+"? ","Informação: ", JOptionPane.YES_NO_OPTION);
                if(i == JOptionPane.YES_OPTION){
                    alterarCTR.AlterarPessoaAluno(jComboBoxUF.getSelectedItem().toString(), jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""),jComboBoxTipoCI.getSelectedItem().toString() ,jTextFieldPessoaPrenome.getText().toUpperCase(), jTextFieldPessoaSobrenome.getText().toUpperCase().replace(" ", ""), jComboBoxAgnome.getSelectedItem().toString(), jTextFieldNomeCompleto.getText().toUpperCase().replace("  ", ""), jTextFieldPessoaDN.getText(),jComboBoxSexo.getSelectedItem().toString(),jComboBoxRacaCor.getSelectedItem().toString(), estadocivil, jComboBoxNascimentoMultiplo.getSelectedItem().toString(),jComboBoxCargo.getSelectedItem().toString());
                    JOptionPane.showMessageDialog(null,""+jTextFieldNomeCompleto.getText()+" Alterado com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                    LimparCampos();
                }
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,"Campos de Dados em Branco... ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
		System.out.println(e.getMessage());
	}    
    }
    
    public void VerificadorPessoa(){
    try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.VerificadorPessoa(jComboBoxUF.getSelectedItem().toString(), jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""));
            int v = 0;
            while(rs.next()){       
                v = (rs.getInt("verificador"));  
            }
            if (v == 0){
                InserirPessoa();
            }else{
                AlterarPessoa();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }    
    }
    
    public void VerificadorPessoaStatus(){
    try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.VerificadorPessoaStatus(jComboBoxUF.getSelectedItem().toString(), jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""));
            //System.out.println(jComboBoxUF.getSelectedItem().toString());
            int v = 0;
            while(rs.next()){       
                v = (rs.getInt("verificador"));  
            }
            if (v == 0){
                //JOptionPane.showMessageDialog(null,"Pessoa está Desativada do Banco de Dados. Contate o Administrador...","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                //LimparCampos();
                AlunoConsultaDIALOG  jDialog = new AlunoConsultaDIALOG(null, true);
                jDialog.setModal(true);
                jDialog.setVisible(true);
                jComboBoxUF.setSelectedItem(jDialog.getGetuf());
                jTextFieldRA.setText(jDialog.getGetid());
            }else{
                ConsultarAluno();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }    
        }
    
    public void ConsultarAluno(){
        try{
            BaseCTR consultarAlunoCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarAlunoCTR.ConsultarPessoaAluno(jComboBoxUF.getSelectedItem().toString(), jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""));
            while(rs.next()){       
                jTextFieldPessoaPrenome.setText((rs.getString("pessoa_prenome")));
                jTextFieldPessoaSobrenome.setText((rs.getString("pessoa_sobrenome")));
                jComboBoxAgnome.setSelectedItem((rs.getString("pessoa_agnome")));
                jTextFieldNomeCompleto.setText((rs.getString("pessoa_nome")));
                String result = out.format(in.parse(rs.getString("pessoa_dn")));
                jTextFieldPessoaDN.setText(result);
                jComboBoxRacaCor.setSelectedItem((rs.getString("pessoa_cor")));
                jComboBoxSexo.setSelectedItem((rs.getString("pessoa_sexo")));
                jComboBoxTipoCI.setSelectedItem(rs.getString("pessoa_ci_tipo"));
                jComboBoxNascimentoMultiplo.setSelectedItem(rs.getString("pessoa_nascimento_multiplo"));
                //System.out.println((rs.getString("pessoa_dn")));
            }
                jLabelRA.setText(jTextFieldRA.getText());
                jLabelNome.setText(jTextFieldNomeCompleto.getText());
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
         }
    }
    
    public void MostrarDadosTabelaAlunoBiblioteca(){
        try{
            BaseCTR consultar = new BaseCTR();
            ResultSet rs=null;
            rs=consultar.ConsultarPessoaBiblioteca(jComboBoxUF.getSelectedItem().toString(), jTextFieldRA.getText());
            DefaultTableModel modelo = (DefaultTableModel) jTableBiblioteca.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                Object[] novaLinha = new Object[5];
                novaLinha[0] = rs.getString("acervo_relatar_id");
                novaLinha[1] = rs.getString("acervo_relatar_data");
                novaLinha[2] = rs.getString("acervo_tombo_empresa_numero");
                novaLinha[3] = rs.getString("acervo_nome");
                novaLinha[4] = rs.getString("empresa_nome");
                modelo.addRow(novaLinha);
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void InserirTelefoneTipo(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String tipo = JOptionPane.showInputDialog("Informe o Tipo de Telefone:","");
            if ("".equals(tipo)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirTelefoneTipo(tipo.toUpperCase());
		JOptionPane.showMessageDialog(null,""+tipo+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarTelefoneTipo();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    public void ConsultarTelefoneTipo(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarTelefoneTipo();
            jComboBoxTelTipo.removeAllItems();
            while(rs.next()){       
                jComboBoxTelTipo.addItem(rs.getString("tel_tipo"));    
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void InserirTelefoneOperadora(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String operadora = JOptionPane.showInputDialog("Informe a Operadora do Telefone:","");
            if ("".equals(operadora)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirTelefoneOperadora(operadora.toUpperCase().replace("  ", "").replace("Á", "A").replace("á", "A").replace("É", "E").replace("é", "E").replace("Í", "I").replace("í", "I").replace("ã", "A").replace("Ã", "A").replace("Ó", "O").replace("ó", "O"));
		JOptionPane.showMessageDialog(null,""+operadora+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarTelefoneOperadora();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    public void ConsultarTelefoneOperadora(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarTelefoneOperadora();
            jComboBoxTelOperadora.removeAllItems();
            while(rs.next()){       
                jComboBoxTelOperadora.addItem(rs.getString("tel_operadora"));    
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void InserirTelefoneDDD(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String ddd = JOptionPane.showInputDialog("Informe o DDD do Telefone:","");
            if ("".equals(ddd)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirTelefoneDDD(ddd.toUpperCase());
		JOptionPane.showMessageDialog(null,""+ddd+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarTelefoneDDD();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    public void ConsultarTelefoneDDD(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarTelefoneDDD();
            jComboBoxTelDDD.removeAllItems();
            while(rs.next()){       
                jComboBoxTelDDD.addItem(rs.getString("tel_ddd_numero"));    
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    //Inserir Religião
    public void InserirReligiao(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String religiao = JOptionPane.showInputDialog("Informe o Nome da Religião: Exemplo: Católica","");
            if ("".equals(religiao)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirReligiao(religiao.toUpperCase().replace("  ", "").replace("Á", "A").replace("á", "A").replace("É", "E").replace("é", "E").replace("Í", "I").replace("í", "I").replace("ã", "A").replace("Ã", "A").replace("Ó", "O").replace("ó", "O"));
		JOptionPane.showMessageDialog(null,""+religiao+" Inserida com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarReligiao();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    //Consultar Cargo
    public void ConsultarEmpresaCargo(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarEmpresaCargo();
            jComboBoxCargo.removeAllItems();
            //jComboBoxUFEnd.removeAllItems();
            while(rs.next()){       
                jComboBoxCargo.addItem(rs.getString("empresa_cargo_nome"));    
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    //Inserir Empresa Cargo
    public void InserirEmpresaCargo(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String cargo = JOptionPane.showInputDialog("Informe o Nome do Cargo: Exemplo: Professor(a)","");
            if ("".equals(cargo)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirEmpresaCargo(cargo.toUpperCase().replace("  ", "").replace("Á", "A").replace("á", "A").replace("É", "E").replace("é", "E").replace("Í", "I").replace("í", "I").replace("ã", "A").replace("Ã", "A").replace("Ó", "O").replace("ó", "O"));
		JOptionPane.showMessageDialog(null,""+cargo+" Inserida com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarEmpresaCargo();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    //Consultar Religião
    public void ConsultarReligiao(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarReligiao();
            jComboBoxReligiao.removeAllItems();
            //jComboBoxUFEnd.removeAllItems();
            while(rs.next()){       
                jComboBoxReligiao.addItem(rs.getString("religiao_nome"));    
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    //Inserir Certificadora
    public void InserirCertificadora(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String certificadora = JOptionPane.showInputDialog("Informe o Nome da Instituição Certificadora: Exemplo: FEF","");
            if ("".equals(certificadora)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirCertificadora(certificadora.toUpperCase().replace("  ", "").replace("Á", "A").replace("á", "A").replace("É", "E").replace("é", "E").replace("Í", "I").replace("í", "I").replace("ã", "A").replace("Ã", "A").replace("Ó", "O").replace("ó", "O"));
		JOptionPane.showMessageDialog(null,""+certificadora+" Inserida com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarCertificadora();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    // Consultar Certificadora
    public void ConsultarCertificadora(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarCertificadora();
            jComboBoxCertificadora.removeAllItems();
            while(rs.next()){       
                jComboBoxCertificadora.addItem(rs.getString("certificadora_nome"));    
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    // Inserir Medico
    public void InserirMedico(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String tipo = JOptionPane.showInputDialog("Informe o Tipo do Médico: Exemplo: CRM/SP CRF/SP CRBM/SP ...","");
            String codigo = JOptionPane.showInputDialog("Informe o Código do Médico: Exemplo: 123456","");
            String sexo = JOptionPane.showInputDialog("Informe o Sexo do Médico: Exemplo: M ou F","");
            String nome = JOptionPane.showInputDialog("Informe o Nome do Médico: Exemplo: Luiz Felipe","");
            if ("".equals(tipo) || "".equals(codigo) || "".equals(sexo) || "".equals(nome)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                //inserirCTR.InserirMedico(tipo.toUpperCase(), codigo.toUpperCase(), sexo.toUpperCase(), nome.toUpperCase().replace("  ", "").replace("Á", "A").replace("á", "A").replace("É", "E").replace("é", "E").replace("Í", "I").replace("í", "I").replace("ã", "A").replace("Ã", "A").replace("Ó", "O").replace("ó", "O"));
		JOptionPane.showMessageDialog(null,""+nome+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarUF();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    public void InserirPais(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String pais = JOptionPane.showInputDialog("Informe o Pais: Exemplo: BRASIL","");
            if ("".equals(pais)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirPais(pais.toUpperCase().replace("  ", "").replace("Á", "A").replace("á", "A").replace("É", "E").replace("é", "E").replace("Í", "I").replace("í", "I").replace("ã", "A").replace("Ã", "A").replace("Ó", "O").replace("ó", "O"));
		JOptionPane.showMessageDialog(null,""+pais+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarPais();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    public void InserirUF(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String pais = "BRASIL";
            String uf = JOptionPane.showInputDialog("Informe a Unidade Federativa: Exemplo: SP","");
            String desc = JOptionPane.showInputDialog("Informe a Unidade Federativa por Extenso: Exemplo: SÃO PAULO","");
            if ("".equals(pais) || "".equals(uf) || "".equals(desc)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirUF(pais.toUpperCase(), uf.toUpperCase(), desc.toUpperCase());
		JOptionPane.showMessageDialog(null,""+uf+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarUF();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    public void InserirUF2(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String uf = JOptionPane.showInputDialog("Informe a Unidade Federativa: Exemplo: SP","");
            String desc = JOptionPane.showInputDialog("Informe a Unidade Federativa por Extenso: Exemplo: SÃO PAULO","");;
            if ("".equals(jComboBoxPais.getSelectedItem().toString()) || "".equals(uf) || "".equals(desc)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirUF(jComboBoxPais.getSelectedItem().toString(), uf.toUpperCase(), desc.toUpperCase());
		JOptionPane.showMessageDialog(null,""+uf+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarUF2();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    public void ConsultarPais(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarPais();
            jComboBoxPais.removeAllItems();
            //jComboBoxUFEnd.removeAllItems();
            while(rs.next()){       
                jComboBoxPais.addItem(rs.getString("pais_nome"));    
                //jComboBoxUFEnd.addItem(rs.getString("uf_nome"));
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void ConsultarUF(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarUF();
            jComboBoxUF.removeAllItems();
            //jComboBoxUFEnd.removeAllItems();
            while(rs.next()){       
                jComboBoxUF.addItem(rs.getString("uf_nome"));    
                //jComboBoxUFEnd.addItem(rs.getString("uf_nome"));
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void ConsultarUF2(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarUF2(jComboBoxPais.getSelectedItem().toString());
            //jComboBoxUF.removeAllItems();
            jComboBoxUFEnd.removeAllItems();
            while(rs.next()){       
                //jComboBoxUF.addItem(rs.getString("uf_nome"));    
                jComboBoxUFEnd.addItem(rs.getString("uf_nome"));
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void ConsultarCidade(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarCidade(jComboBoxPais.getSelectedItem().toString(), jComboBoxUFEnd.getSelectedItem().toString());
            //jComboBoxUF.removeAllItems();
            jComboBoxCidade.removeAllItems();
            while(rs.next()){       
                //jComboBoxUF.addItem(rs.getString("uf_nome"));    
                jComboBoxCidade.addItem(rs.getString("cidade_nome"));
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void InserirCidade(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String cidade = JOptionPane.showInputDialog("Informe a Distrito/Cidade:","");
            if ("".equals(cidade)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirCidade(jComboBoxPais.getSelectedItem().toString(), jComboBoxUFEnd.getSelectedItem().toString(), cidade.toUpperCase().replace("  ", "").replace("Á", "A").replace("á", "A").replace("É", "E").replace("é", "E").replace("Í", "I").replace("í", "I").replace("ã", "A").replace("Ã", "A").replace("Ó", "O").replace("ó", "O").replace("Ó", "O").replace("ó", "O"));
		JOptionPane.showMessageDialog(null,""+cidade+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarCidade();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    public void ConsultarCEP(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarCEP(jComboBoxPais.getSelectedItem().toString(), jComboBoxUFEnd.getSelectedItem().toString(), jComboBoxCidade.getSelectedItem().toString());
            //jComboBoxUF.removeAllItems();
            jComboBoxCEP.removeAllItems();
            while(rs.next()){       
                //jComboBoxUF.addItem(rs.getString("uf_nome"));    
                jComboBoxCEP.addItem(rs.getString("cep_numero"));
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void InserirCEP(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String cep = JOptionPane.showInputDialog("Informe o CEP:","");
            if ("".equals(cep)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirCEP(jComboBoxPais.getSelectedItem().toString(), jComboBoxUF.getSelectedItem().toString(), jComboBoxCidade.getSelectedItem().toString(), cep.toUpperCase());
		JOptionPane.showMessageDialog(null,""+cep+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarCEP();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    public void ConsultarBairro(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarBairro(jComboBoxPais.getSelectedItem().toString(), jComboBoxUFEnd.getSelectedItem().toString(), jComboBoxCidade.getSelectedItem().toString(), jComboBoxCEP.getSelectedItem().toString(), jComboBoxZona.getSelectedItem().toString());
            //jComboBoxUF.removeAllItems();
            jComboBoxBairro.removeAllItems();
            while(rs.next()){       
                //jComboBoxUF.addItem(rs.getString("uf_nome"));    
                jComboBoxBairro.addItem(rs.getString("bairro_nome"));
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void InserirBairro(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String bairro = JOptionPane.showInputDialog("Informe o Bairro:","");
            if ("".equals(bairro)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirBairro(jComboBoxPais.getSelectedItem().toString(), jComboBoxUF.getSelectedItem().toString(), jComboBoxCidade.getSelectedItem().toString(), jComboBoxCEP.getSelectedItem().toString(), jComboBoxZona.getSelectedItem().toString(), bairro.toUpperCase().replace("  ", "").replace("Á", "A").replace("á", "A").replace("É", "E").replace("é", "E").replace("Í", "I").replace("í", "I").replace("ã", "A").replace("Ã", "A").replace("Ó", "O").replace("ó", "O"));
		JOptionPane.showMessageDialog(null,""+bairro+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarBairro();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    public void ConsultarLogradouro(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarLogradouro(jComboBoxPais.getSelectedItem().toString(), jComboBoxUFEnd.getSelectedItem().toString(), jComboBoxCidade.getSelectedItem().toString(), jComboBoxCEP.getSelectedItem().toString(), jComboBoxZona.getSelectedItem().toString(), jComboBoxBairro.getSelectedItem().toString());
            //jComboBoxUF.removeAllItems();
            jComboBoxLogradouro.removeAllItems();
            while(rs.next()){       
                //jComboBoxUF.addItem(rs.getString("uf_nome"));    
                jComboBoxLogradouro.addItem(rs.getString("logradouro_nome"));
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void InserirLogradouro(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String logradouro = JOptionPane.showInputDialog("Informe o Logradouro:","");
            if ("".equals(logradouro)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirLogradouro(jComboBoxPais.getSelectedItem().toString(), jComboBoxUF.getSelectedItem().toString(), jComboBoxCidade.getSelectedItem().toString(), jComboBoxCEP.getSelectedItem().toString(), jComboBoxZona.getSelectedItem().toString(), jComboBoxBairro.getSelectedItem().toString(), logradouro.toUpperCase().replace("  ", "").replace("Á", "A").replace("á", "A").replace("É", "E").replace("é", "E").replace("Í", "I").replace("í", "I").replace("ã", "A").replace("Ã", "A").replace("Ó", "O").replace("ó", "O"));
		JOptionPane.showMessageDialog(null,""+logradouro+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarLogradouro();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
       
    public void InserirSexo(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String sexo = JOptionPane.showInputDialog("Informe o Sexo:","");
            if ("".equals(sexo)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirSexo(sexo.toUpperCase());
		JOptionPane.showMessageDialog(null,""+sexo+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarSexo();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    public void ConsultarSexo(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarSexo();
            jComboBoxSexo.removeAllItems();
            while(rs.next()){       
                jComboBoxSexo.addItem(rs.getString("sexo_tipo"));    
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void ConsultarNascimentoMultiplo(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarNascimentoMultiplo();
            jComboBoxNascimentoMultiplo.removeAllItems();
            while(rs.next()){       
                jComboBoxNascimentoMultiplo.addItem(rs.getString("nascimento_multiplo_tipo"));    
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void ConsultarMedico(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarMedico();
            jComboBoxMedico.removeAllItems();
            while(rs.next()){       
                jComboBoxMedico.addItem(rs.getString("medico_nome"));    
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void InserirRacaCor(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String rc = JOptionPane.showInputDialog("Informe a Raça/Cor:","");
            if ("".equals(rc)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirRacaCor(rc.toUpperCase().replace("  ", "").replace("Á", "A").replace("á", "A").replace("É", "E").replace("é", "E").replace("Í", "I").replace("í", "I").replace("ã", "A").replace("Ã", "A").replace("Ó", "O").replace("ó", "O"));
		JOptionPane.showMessageDialog(null,""+rc+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarRacaCor();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    public void ConsultarRacaCor(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarRacaCor();
            jComboBoxRacaCor.removeAllItems();
            while(rs.next()){       
                jComboBoxRacaCor.addItem(rs.getString("cor_racas_nome"));    
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void InserirAgnome(){
        try{
            BaseCTR inserirCTR = new BaseCTR();
            String ag = JOptionPane.showInputDialog("Informe o Agnome:","");
            if ("".equals(ag)){
                JOptionPane.showMessageDialog(null,"Campo em Branco. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                inserirCTR.InserirAgnome(ag.toUpperCase().replace("  ", "").replace("Á", "A").replace("á", "A").replace("É", "E").replace("é", "E").replace("Í", "I").replace("í", "I").replace("ã", "A").replace("Ã", "A").replace("Ó", "O").replace("ó", "O"));
		JOptionPane.showMessageDialog(null,""+ag+" Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                ConsultarAgnome();
            }
	}
            catch(Exception e){
		System.out.println(e.getMessage());
	}
    }
    
    public void ConsultarAgnome(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarAgnome();
            jComboBoxAgnome.removeAllItems();
            while(rs.next()){       
                jComboBoxAgnome.addItem(rs.getString("agnome_nome"));    
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void LimparCampos(){
        jTextFieldRA.setText("");
        jTextFieldNomeCompleto.setText("");
        jComboBoxAgnome.setSelectedItem("");
        jTextFieldPessoaPrenome.setText("");
        jTextFieldPessoaSobrenome.setText("");
        //jFormattedTextFieldPessoaDN.setText("");
        jTextFieldPessoaDN.setText("");
        jComboBoxRacaCor.setSelectedItem("");
        //jComboBoxSexo.setSelectedItem("F");
        //jComboBoxUF.setSelectedItem("SP");
        //jComboBoxPais.setSelectedItem("BRASIL");
        jLabelRA.setText("");
        jLabelNome.setText("");
    }
    
    public void LimparCampos2(){
        //jTextFieldRA.setText("");
        jTextFieldNomeCompleto.setText("");
        jComboBoxAgnome.setSelectedItem("");
        jTextFieldPessoaPrenome.setText("");
        jTextFieldPessoaSobrenome.setText("");
        //jFormattedTextFieldPessoaDN.setText("");
        jTextFieldPessoaDN.setText("");
        jComboBoxRacaCor.setSelectedItem("");
        //jComboBoxSexo.setSelectedItem("F");
        //jComboBoxUF.setSelectedItem("SP");
        jLabelRA.setText("");
        jLabelNome.setText("");
    }
    
    public void MostrarDadosTabelaRelatoriosAluno(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarRelatoriosAluno2(jComboBoxUF.getSelectedItem().toString(), jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""));
            DefaultTableModel modelo = (DefaultTableModel) jTableRelatorios.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                Object[] novaLinha = new Object[6];
                novaLinha[0] = rs.getString("empresa_relatos_id");
                novaLinha[1] = rs.getString("empresa_relatos_pessoas_data");
                novaLinha[2] = rs.getString("pessoa_nome");
                novaLinha[3] = rs.getString("empresa_relatos_tipo1");
                novaLinha[4] = rs.getString("empresa_relatos_tipo2");
                novaLinha[5] = rs.getString("empresa_nome");
                modelo.addRow(novaLinha);
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void MododeGravacao(){
       if(jPanelDadosPessoais.isVisible()){
           VerificadorPessoa();
       }
       if(jPanelEndereco.isVisible()){
          InserirPessoaEndereco();
       }
       if(jPanelTelefone.isVisible()){
           //InserirTelefonePessoa();
           VerificarTelefonePessoa();
       }
       if(jPanelReligiao.isVisible()){
           InserirPessoaReligiao();
       }
    }
    
    public void VerificarTelefonePessoa(){
    try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.VerificarTelefonePessoa(jComboBoxUF.getSelectedItem().toString(), jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""), jComboBoxTelDDD.getSelectedItem().toString(), jTextFieldTelNumero.getText().toUpperCase().replace(".", "").replace("-", ""), jTextFieldTelRamal.getText());
            int v = 0;
            while(rs.next()){       
                v = (rs.getInt("verificador"));  
            }
            if (v == 0){
                InserirTelefonePessoa();
            }else{
                RecuperarTelefonePessoa();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }    
    }
    
    public void RemoverTelefonePessoa(){
        try{
            BaseCTR biblioteca = new BaseCTR();	
            if ("".equals(jTextFieldCodigoTelefone.getText())){
               JOptionPane.showMessageDialog(null,"Campo Código está Vazio, Verifique!. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
               jTextFieldCodigoTelefone.requestFocus();
            }else{
                int i = JOptionPane.showConfirmDialog(null, "Deseja Retirar este Telefone dos Contatos? ","Informação: ", JOptionPane.YES_NO_OPTION);
                if(i == JOptionPane.YES_OPTION){
                    biblioteca.RemoverTelefonePessoa(Integer.parseInt(jTextFieldCodigoTelefone.getText()));
                    JOptionPane.showMessageDialog(null,"Foi Retirado com Sucesso dos Contatos. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                    //ConsultarRelatarAcervo();
                    //LimparCampos();
                    MostrarDadosTabelaTelefone();
                    jTextFieldCodigoTelefone.setText("");
                    //jTextFieldPesquisa.requestFocus();
                }
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,"Campos de Dados em Branco... ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
		System.out.println(e.getMessage());
	}
    }
    
    public void RecuperarTelefonePessoa(){
    try{
            BaseCTR inserirCTR = new BaseCTR();	
            int i = JOptionPane.showConfirmDialog(null, "Deseja Recuperar este Número de Telefone? ","Informação: ", JOptionPane.YES_NO_OPTION);
            if(i == JOptionPane.YES_OPTION){
                inserirCTR.RecuperarTelefonePessoa(jComboBoxUF.getSelectedItem().toString(), jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""), jComboBoxTelDDD.getSelectedItem().toString(), jTextFieldTelNumero.getText().toUpperCase().replace(".", "").replace("-", ""), jTextFieldTelRamal.getText());
                JOptionPane.showMessageDialog(null,"Número de Telefone Recuperado com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                //Consultar();
                MostrarDadosTabelaTelefone();
            }
        }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,"Campos de Dados em Branco... ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
		System.out.println(e.getMessage());
	}    
    }
    
    public void InserirTelefonePessoa(){
    try{
            BaseCTR inserirCTR = new BaseCTR();	
            if ("".equals(jComboBoxUF.getSelectedItem()) || "".equals(jTextFieldRA.getText()) || "".equals(jComboBoxTelTipo.getSelectedItem()) || "".equals(jComboBoxTelOperadora.getSelectedItem()) || "".equals(jComboBoxTelDDD.getSelectedItem()) || "".equals(jTextFieldTelNumero.getText())){
               JOptionPane.showMessageDialog(null,"Campos de Dados em Branco, Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
               jTextFieldRA.requestFocus();
            }else{
                int i = JOptionPane.showConfirmDialog(null, "Deseja Inserir este Número de Telefone? ","Informação: ", JOptionPane.YES_NO_OPTION);
                if(i == JOptionPane.YES_OPTION){
                    inserirCTR.InserirTelefonePessoa(jComboBoxUF.getSelectedItem().toString(), jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""), jComboBoxTelTipo.getSelectedItem().toString(), jComboBoxTelOperadora.getSelectedItem().toString(), jComboBoxTelDDD.getSelectedItem().toString(), jTextFieldTelNumero.getText().replace(".", "").replace("-", ""), jTextFieldTelRamal.getText(), jTextFieldTelObs.getText().toUpperCase());
                    JOptionPane.showMessageDialog(null,"Número de Telefone Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                    //LimparCampos();
                    jTextFieldTelNumero.setText("");
                    jTextFieldTelRamal.setText("");
                    jTextFieldTelObs.setText("");
                    MostrarDadosTabelaTelefone();
                }
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,"Campos de Dados em Branco... ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
		System.out.println(e.getMessage());
	}    
    }
    
    public void InserirPessoaEndereco(){
    try{
            BaseCTR inserirCTR = new BaseCTR();	
            if ("".equals(jComboBoxUF.getSelectedItem()) || "".equals(jTextFieldRA.getText()) || "".equals(jComboBoxPais.getSelectedItem()) || "".equals(jComboBoxUFEnd.getSelectedItem()) || "".equals(jComboBoxCidade.getSelectedItem()) || "".equals(jComboBoxCEP.getSelectedItem()) || "".equals(jComboBoxZona.getSelectedItem()) || "".equals(jComboBoxBairro.getSelectedItem()) || "".equals(jComboBoxLogradouro.getSelectedItem()) || "".equals(jTextFieldEndNumero.getText())){
               JOptionPane.showMessageDialog(null,"Campos de Dados em Branco, Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
               jTextFieldRA.requestFocus();
            }else{
                int i = JOptionPane.showConfirmDialog(null, "Deseja Inserir este Endereço? ","Informação: ", JOptionPane.YES_NO_OPTION);
                if(i == JOptionPane.YES_OPTION){
                    inserirCTR.InserirPessoaEndereco(jComboBoxUF.getSelectedItem().toString(), jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""), jComboBoxPais.getSelectedItem().toString(), jComboBoxUFEnd.getSelectedItem().toString(), jComboBoxCidade.getSelectedItem().toString(), jComboBoxCEP.getSelectedItem().toString(), jComboBoxZona.getSelectedItem().toString(), jComboBoxBairro.getSelectedItem().toString(), jComboBoxLogradouro.getSelectedItem().toString(), jTextFieldEndNumero.getText().toUpperCase(), jTextFieldEndComplementos.getText().toUpperCase(), jTextFieldEndReferencia.getText().toUpperCase());
                    JOptionPane.showMessageDialog(null,"Endereço Inserido com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                    //LimparCampos();
                    jTextFieldEndComplementos.setText("");
                    jTextFieldEndReferencia.setText("");
                    jTextFieldEndNumero.setText("");
                    MostrarDadosTabelaEndereco();
                }
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,"Campos de Dados em Branco... ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
		System.out.println(e.getMessage());
	}    
    }
    
    public void InserirPessoaReligiao(){
    try{
            BaseCTR inserirCTR = new BaseCTR();	
            if ("".equals(jComboBoxUF.getSelectedItem()) || "".equals(jTextFieldRA.getText()) || "".equals(jComboBoxReligiao.getSelectedItem())){
               JOptionPane.showMessageDialog(null,"Campos de Dados em Branco, Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
               jTextFieldRA.requestFocus();
            }else{
                int i = JOptionPane.showConfirmDialog(null, "Deseja Inserir esta Religião? ","Informação: ", JOptionPane.YES_NO_OPTION);
                if(i == JOptionPane.YES_OPTION){
                    inserirCTR.InserirPessoaReligiao(jComboBoxUF.getSelectedItem().toString(), jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""), jComboBoxReligiao.getSelectedItem().toString(), jTextFieldPessoaReligiaoObs.getText().toUpperCase());
                    JOptionPane.showMessageDialog(null,"Religião Inserida com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                    //LimparCampos();
                    jTextFieldEndComplementos.setText("");
                    jTextFieldEndReferencia.setText("");
                    jTextFieldEndNumero.setText("");
                    MostrarDadosPessoaReligiao();
                }
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,"Campos de Dados em Branco... ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
		System.out.println(e.getMessage());
	}    
    }
    
    public void MostrarDadosTabelaTelefone(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarTelefonePessoa(jComboBoxUF.getSelectedItem().toString(),jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""));
            DefaultTableModel modelo = (DefaultTableModel) jTableTelefone.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                Object[] novaLinha = new Object[8];
                novaLinha[0] = rs.getString("tel_id");
                novaLinha[1] = rs.getString("tel_data");
                novaLinha[2] = rs.getString("tel_tipo");
                novaLinha[3] = rs.getString("tel_operadora");
                novaLinha[4] = rs.getString("tel_ddd_numero");
                novaLinha[5] = rs.getString("tel_numero");
                novaLinha[6] = rs.getString("tel_ramal");
                novaLinha[7] = rs.getString("tel_obs");
                modelo.addRow(novaLinha);
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void MostrarDadosTabelaEndereco(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarEnderecoPessoa(jComboBoxUF.getSelectedItem().toString(),jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""));
            DefaultTableModel modelo = (DefaultTableModel) jTablePessoaEndereco.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                Object[] novaLinha = new Object[11];
                novaLinha[0] = rs.getString("pessoa_end_data");
                novaLinha[1] = rs.getString("uf_nome");
                novaLinha[2] = rs.getString("cidade_nome");
                novaLinha[3] = rs.getString("bairro_nome");
                novaLinha[4] = rs.getString("logradouro_nome");
                novaLinha[5] = rs.getString("pessoa_end_numero");
                novaLinha[6] = rs.getString("pessoa_end_complemento");
                novaLinha[7] = rs.getString("cep_numero");
                novaLinha[8] = rs.getString("pessoa_end_referencia");
                novaLinha[9] = rs.getString("pais_nome");
                novaLinha[10] = rs.getString("zona_nome");
                modelo.addRow(novaLinha);
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void MostrarDadosPessoaReligiao(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarReligiaoPessoa(jComboBoxUF.getSelectedItem().toString(),jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""));
            DefaultTableModel modelo = (DefaultTableModel) jTablePessoaReligiao.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                Object[] novaLinha = new Object[3];
                novaLinha[0] = rs.getString("pessoa_religiao_id");
                novaLinha[1] = rs.getString("pessoa_religiao_data");
                novaLinha[2] = rs.getString("pessoa_religiao_nome");
                //novaLinha[3] = rs.getString("bairro_nome");
                modelo.addRow(novaLinha);
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void MostrarDadosTabelaPessoaEmpresa(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarPessoaEmpresa(jComboBoxUF.getSelectedItem().toString(),jTextFieldRA.getText().toUpperCase().replace(".", "").replace("-", "").replace(" ",""));
            DefaultTableModel modelo = (DefaultTableModel) jTablePessoaEmpresa.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                Object[] novaLinha = new Object[3];
                novaLinha[0] = rs.getString("rpe_registro");
                novaLinha[1] = rs.getString("rpe_data");
                novaLinha[2] = rs.getString("empresa_nome");
                modelo.addRow(novaLinha);
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonAddAgnome;
    private javax.swing.JButton jButtonAddBairro;
    private javax.swing.JButton jButtonAddCEP;
    private javax.swing.JButton jButtonAddCertificadora;
    private javax.swing.JButton jButtonAddCidade;
    private javax.swing.JButton jButtonAddEmpresaCargo;
    private javax.swing.JButton jButtonAddLogradouro;
    private javax.swing.JButton jButtonAddMedico;
    private javax.swing.JButton jButtonAddPais;
    private javax.swing.JButton jButtonAddRacaCor;
    private javax.swing.JButton jButtonAddReligiao;
    private javax.swing.JButton jButtonAddRemPessoaEmpresa;
    private javax.swing.JButton jButtonAddSexo;
    private javax.swing.JButton jButtonAddTelDDD;
    private javax.swing.JButton jButtonAddTelOperadora;
    private javax.swing.JButton jButtonAddTelTipo;
    private javax.swing.JButton jButtonAddUF;
    private javax.swing.JButton jButtonAddUFEnd;
    private javax.swing.JButton jButtonConsultarBairro;
    private javax.swing.JButton jButtonConsultarCEP;
    private javax.swing.JButton jButtonConsultarCidade;
    private javax.swing.JButton jButtonConsultarLogradouro;
    private javax.swing.JButton jButtonConsultarUF;
    private javax.swing.JButton jButtonGravarAlterar;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JComboBox jComboBoxAgnome;
    private javax.swing.JComboBox jComboBoxBairro;
    private javax.swing.JComboBox jComboBoxCEP;
    private javax.swing.JComboBox jComboBoxCargo;
    private javax.swing.JComboBox jComboBoxCertificado;
    private javax.swing.JComboBox jComboBoxCertificadora;
    private javax.swing.JComboBox jComboBoxCidade;
    private javax.swing.JComboBox jComboBoxDiploma;
    private javax.swing.JComboBox jComboBoxLogradouro;
    private javax.swing.JComboBox jComboBoxMedico;
    private javax.swing.JComboBox jComboBoxNascimentoMultiplo;
    private javax.swing.JComboBox jComboBoxPais;
    private javax.swing.JComboBox<String> jComboBoxPessoaEmailProv;
    private javax.swing.JComboBox jComboBoxRacaCor;
    private javax.swing.JComboBox jComboBoxReligiao;
    private javax.swing.JComboBox jComboBoxSexo;
    private javax.swing.JComboBox jComboBoxTelDDD;
    private javax.swing.JComboBox jComboBoxTelOperadora;
    private javax.swing.JComboBox jComboBoxTelTipo;
    private javax.swing.JComboBox jComboBoxTipoCI;
    private javax.swing.JComboBox jComboBoxUF;
    private javax.swing.JComboBox jComboBoxUFEnd;
    private javax.swing.JComboBox jComboBoxZona;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextFieldCertificado1;
    private javax.swing.JFormattedTextField jFormattedTextFieldCertificado2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelRA;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelBiblioteca;
    private javax.swing.JPanel jPanelCID;
    private javax.swing.JPanel jPanelCertificados;
    private javax.swing.JPanel jPanelDadosPessoais;
    private javax.swing.JPanel jPanelEmail;
    private javax.swing.JPanel jPanelEndereco;
    private javax.swing.JPanel jPanelFiliacao;
    private javax.swing.JPanel jPanelRelatorio;
    private javax.swing.JPanel jPanelReligiao;
    private javax.swing.JPanel jPanelTelefone;
    private javax.swing.JRadioButton jRadioButtonCertificado;
    private javax.swing.JRadioButton jRadioButtonDiploma;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPaneAluno;
    private javax.swing.JTable jTableBiblioteca;
    private javax.swing.JTable jTablePessoaEmpresa;
    private javax.swing.JTable jTablePessoaEndereco;
    private javax.swing.JTable jTablePessoaReligiao;
    private javax.swing.JTable jTableRelatorios;
    private javax.swing.JTable jTableTelefone;
    private javax.swing.JTextField jTextFieldCodigoTelefone;
    private javax.swing.JTextField jTextFieldEndComplementos;
    private javax.swing.JTextField jTextFieldEndNumero;
    private javax.swing.JTextField jTextFieldEndReferencia;
    private javax.swing.JTextField jTextFieldNomeCompleto;
    private javax.swing.JFormattedTextField jTextFieldPessoaDN;
    private javax.swing.JTextField jTextFieldPessoaPrenome;
    private javax.swing.JTextField jTextFieldPessoaReligiaoObs;
    private javax.swing.JTextField jTextFieldPessoaSobrenome;
    private javax.swing.JTextField jTextFieldPessoa_email;
    private javax.swing.JTextField jTextFieldRA;
    private javax.swing.JTextField jTextFieldTelNumero;
    private javax.swing.JTextField jTextFieldTelObs;
    private javax.swing.JTextField jTextFieldTelRamal;
    // End of variables declaration//GEN-END:variables

    
    
}
