/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.escola;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import base.ctr.BaseCTR;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static lib.java.MD5.md5;
import static main.DesktopSGU.jDesktopPaneSGUVIEW;
import relatorios.RelatorioIndividualdoAlunoRL;

/**
 *
 * @author Douglas Estanislau Pereira
 */
public class AlunoRelatorioIndividualVIEW extends javax.swing.JInternalFrame {

    Date hoje = new Date();
    SimpleDateFormat indata= new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat outdata = new SimpleDateFormat("dd/MM/yyyy");
    
    /**
     * Creates new form AlunoClasseRelatorioVIEW
     */
    public AlunoRelatorioIndividualVIEW() {
        initComponents();
        Iniciar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxAlunoUF = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldAlunoRA = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldAlunoNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxProfessorUF = new javax.swing.JComboBox();
        jTextFieldProfessorRG = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldProfessorNome1 = new javax.swing.JTextField();
        jButtonGravar = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jTabbedPaneRelatorioClasse = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaRelatorio = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableRelatoriosdoAluno = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableRelatoriosdoProfessor = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jRadioButtonNVisualizados = new javax.swing.JRadioButton();
        jRadioButtonVisualizados = new javax.swing.JRadioButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableVisualizacoes = new javax.swing.JTable();
        jPasswordFieldProfessorSenha = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        jRadioButtonVisualizar = new javax.swing.JRadioButton();
        jRadioButtonRelatar = new javax.swing.JRadioButton();
        jButtonVisualizar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldCodigoRelatorio = new javax.swing.JTextField();
        jTextFieldProfessorNome = new javax.swing.JTextField();
        jPasswordFieldProfessorSenha1 = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldProfessorRG1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxProfessorUF1 = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jButtonGravarAlterar = new javax.swing.JButton();
        jTextFieldRelatarData = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        jButtonNovo = new javax.swing.JButton();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setText("Aluno:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(210, 130, 100, 18);

        jLabel2.setText("Docente:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(210, 80, 130, 18);

        jComboBoxAlunoUF.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jComboBoxAlunoUF);
        jComboBoxAlunoUF.setBounds(20, 150, 60, 28);

        jLabel5.setText("RA:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(80, 130, 70, 18);

        jTextFieldAlunoRA.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTextFieldAlunoRA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldAlunoRAKeyPressed(evt);
            }
        });
        getContentPane().add(jTextFieldAlunoRA);
        jTextFieldAlunoRA.setBounds(80, 150, 130, 28);

        jLabel4.setText("UF:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 130, 51, 18);

        jTextFieldAlunoNome.setEditable(false);
        jTextFieldAlunoNome.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jTextFieldAlunoNome);
        jTextFieldAlunoNome.setBounds(210, 150, 560, 28);

        jLabel3.setText("UF:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 180, 50, 18);

        jComboBoxProfessorUF.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jComboBoxProfessorUF);
        jComboBoxProfessorUF.setBounds(20, 200, 60, 28);

        jTextFieldProfessorRG.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTextFieldProfessorRG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldProfessorRGKeyPressed(evt);
            }
        });
        getContentPane().add(jTextFieldProfessorRG);
        jTextFieldProfessorRG.setBounds(80, 200, 130, 28);

        jLabel6.setText("RG:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(80, 180, 60, 18);

        jTextFieldProfessorNome1.setEditable(false);
        jTextFieldProfessorNome1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jTextFieldProfessorNome1);
        jTextFieldProfessorNome1.setBounds(210, 100, 430, 28);

        jButtonGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/48x48/Gravar48.png"))); // NOI18N
        jButtonGravar.setToolTipText("Gravar Relatório");
        jButtonGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGravarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonGravar);
        jButtonGravar.setBounds(80, 0, 80, 80);

        jButtonSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/48x48/Sair48.png"))); // NOI18N
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSair);
        jButtonSair.setBounds(320, 0, 80, 80);

        jPanel1.setLayout(null);

        jTextAreaRelatorio.setColumns(20);
        jTextAreaRelatorio.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jTextAreaRelatorio.setLineWrap(true);
        jTextAreaRelatorio.setRows(12);
        jTextAreaRelatorio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaRelatorioKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTextAreaRelatorio);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 870, 290);

        jTabbedPaneRelatorioClasse.addTab("Relatório:", jPanel1);

        jPanel2.setLayout(null);

        jTableRelatoriosdoAluno.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTableRelatoriosdoAluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código:", "Data:", "Relatado por:", "Escola:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableRelatoriosdoAluno.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jTableRelatoriosdoAluno);
        if (jTableRelatoriosdoAluno.getColumnModel().getColumnCount() > 0) {
            jTableRelatoriosdoAluno.getColumnModel().getColumn(0).setResizable(false);
            jTableRelatoriosdoAluno.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTableRelatoriosdoAluno.getColumnModel().getColumn(1).setResizable(false);
            jTableRelatoriosdoAluno.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTableRelatoriosdoAluno.getColumnModel().getColumn(2).setResizable(false);
            jTableRelatoriosdoAluno.getColumnModel().getColumn(2).setPreferredWidth(400);
            jTableRelatoriosdoAluno.getColumnModel().getColumn(3).setResizable(false);
            jTableRelatoriosdoAluno.getColumnModel().getColumn(3).setPreferredWidth(400);
        }

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(0, 0, 870, 290);

        jTabbedPaneRelatorioClasse.addTab("Relatórios do Aluno:", jPanel2);

        jPanel6.setLayout(null);

        jTableRelatoriosdoProfessor.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTableRelatoriosdoProfessor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código:", "Data:", "UF:", "RA/RG:", "Aluno:", "Escola:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableRelatoriosdoProfessor.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(jTableRelatoriosdoProfessor);
        if (jTableRelatoriosdoProfessor.getColumnModel().getColumnCount() > 0) {
            jTableRelatoriosdoProfessor.getColumnModel().getColumn(0).setResizable(false);
            jTableRelatoriosdoProfessor.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTableRelatoriosdoProfessor.getColumnModel().getColumn(1).setResizable(false);
            jTableRelatoriosdoProfessor.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTableRelatoriosdoProfessor.getColumnModel().getColumn(2).setResizable(false);
            jTableRelatoriosdoProfessor.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTableRelatoriosdoProfessor.getColumnModel().getColumn(3).setResizable(false);
            jTableRelatoriosdoProfessor.getColumnModel().getColumn(3).setPreferredWidth(150);
            jTableRelatoriosdoProfessor.getColumnModel().getColumn(4).setResizable(false);
            jTableRelatoriosdoProfessor.getColumnModel().getColumn(4).setPreferredWidth(375);
            jTableRelatoriosdoProfessor.getColumnModel().getColumn(5).setResizable(false);
            jTableRelatoriosdoProfessor.getColumnModel().getColumn(5).setPreferredWidth(375);
        }

        jPanel6.add(jScrollPane3);
        jScrollPane3.setBounds(0, 0, 870, 290);

        jTabbedPaneRelatorioClasse.addTab("Relatórios do Docente:", jPanel6);

        jPanel3.setLayout(null);

        jRadioButtonNVisualizados.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jRadioButtonNVisualizados.setText("Não Visualizados:");
        jRadioButtonNVisualizados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonNVisualizadosActionPerformed(evt);
            }
        });
        jPanel3.add(jRadioButtonNVisualizados);
        jRadioButtonNVisualizados.setBounds(10, 10, 160, 24);

        jRadioButtonVisualizados.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jRadioButtonVisualizados.setText("Visualizados:");
        jRadioButtonVisualizados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonVisualizadosActionPerformed(evt);
            }
        });
        jPanel3.add(jRadioButtonVisualizados);
        jRadioButtonVisualizados.setBounds(180, 10, 160, 24);

        jScrollPane4.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N

        jTableVisualizacoes.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTableVisualizacoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código:", "Data:", "UF:", "RA:", "Nome:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableVisualizacoes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableVisualizacoes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVisualizacoesMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableVisualizacoes);
        if (jTableVisualizacoes.getColumnModel().getColumnCount() > 0) {
            jTableVisualizacoes.getColumnModel().getColumn(0).setResizable(false);
            jTableVisualizacoes.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTableVisualizacoes.getColumnModel().getColumn(1).setResizable(false);
            jTableVisualizacoes.getColumnModel().getColumn(1).setPreferredWidth(120);
            jTableVisualizacoes.getColumnModel().getColumn(2).setResizable(false);
            jTableVisualizacoes.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTableVisualizacoes.getColumnModel().getColumn(3).setResizable(false);
            jTableVisualizacoes.getColumnModel().getColumn(3).setPreferredWidth(120);
            jTableVisualizacoes.getColumnModel().getColumn(4).setResizable(false);
            jTableVisualizacoes.getColumnModel().getColumn(4).setPreferredWidth(400);
        }

        jPanel3.add(jScrollPane4);
        jScrollPane4.setBounds(10, 40, 850, 250);

        jTabbedPaneRelatorioClasse.addTab("Histórico de Visualizações:", jPanel3);

        getContentPane().add(jTabbedPaneRelatorioClasse);
        jTabbedPaneRelatorioClasse.setBounds(0, 230, 880, 330);

        jPasswordFieldProfessorSenha.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jPasswordFieldProfessorSenha);
        jPasswordFieldProfessorSenha.setBounds(640, 200, 130, 28);

        jLabel7.setText("Senha:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(640, 180, 70, 18);

        jRadioButtonVisualizar.setText("Visualizar");
        jRadioButtonVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonVisualizarActionPerformed(evt);
            }
        });
        getContentPane().add(jRadioButtonVisualizar);
        jRadioButtonVisualizar.setBounds(670, 10, 110, 24);

        jRadioButtonRelatar.setText("Relatar");
        jRadioButtonRelatar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonRelatarActionPerformed(evt);
            }
        });
        getContentPane().add(jRadioButtonRelatar);
        jRadioButtonRelatar.setBounds(580, 10, 90, 24);

        jButtonVisualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/48x48/Alterar48.png"))); // NOI18N
        jButtonVisualizar.setToolTipText("Visualizar");
        jButtonVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVisualizarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonVisualizar);
        jButtonVisualizar.setBounds(160, 0, 80, 80);

        jLabel8.setText("Código:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(410, 30, 80, 18);

        jTextFieldCodigoRelatorio.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTextFieldCodigoRelatorio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCodigoRelatorioKeyPressed(evt);
            }
        });
        getContentPane().add(jTextFieldCodigoRelatorio);
        jTextFieldCodigoRelatorio.setBounds(410, 50, 90, 28);

        jTextFieldProfessorNome.setEditable(false);
        jTextFieldProfessorNome.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jTextFieldProfessorNome);
        jTextFieldProfessorNome.setBounds(210, 200, 430, 28);

        jPasswordFieldProfessorSenha1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jPasswordFieldProfessorSenha1);
        jPasswordFieldProfessorSenha1.setBounds(640, 100, 130, 28);

        jLabel9.setText("Senha:");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(640, 80, 70, 18);

        jLabel10.setText("Docente:");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(210, 180, 130, 18);

        jTextFieldProfessorRG1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jTextFieldProfessorRG1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldProfessorRG1KeyPressed(evt);
            }
        });
        getContentPane().add(jTextFieldProfessorRG1);
        jTextFieldProfessorRG1.setBounds(80, 100, 130, 28);

        jLabel11.setText("RG:");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(80, 80, 70, 18);

        jComboBoxProfessorUF1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jComboBoxProfessorUF1);
        jComboBoxProfessorUF1.setBounds(20, 100, 60, 28);

        jLabel12.setText("UF:");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(20, 80, 50, 18);

        jButtonGravarAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/48x48/GerarRelatorio48.png"))); // NOI18N
        jButtonGravarAlterar.setToolTipText("Gerar Relatório");
        jButtonGravarAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGravarAlterarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonGravarAlterar);
        jButtonGravarAlterar.setBounds(240, 0, 80, 80);

        try {
            jTextFieldRelatarData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTextFieldRelatarData.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        getContentPane().add(jTextFieldRelatarData);
        jTextFieldRelatarData.setBounds(510, 50, 110, 28);

        jLabel13.setText("Data:");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(510, 30, 70, 18);

        jButtonNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lib/png/48x48/Novo48.png"))); // NOI18N
        jButtonNovo.setToolTipText("Novo Código");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonNovo);
        jButtonNovo.setBounds(0, 0, 80, 80);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void GerarPDF(){
        Document document = new Document();
        String so = String.valueOf(System.getProperty("os.name"));
        System.out.println(so);
        if (so.equals("Linux")){
        try { 
            File homedir = new File(System.getProperty("user.home"));
            System.out.println(homedir);
            File fileToRead = new File(homedir, "SGU/relatorio" + jTextFieldCodigoRelatorio.getText() + "-" + jTextFieldProfessorRG.getText() + "-" + jComboBoxProfessorUF.getSelectedItem().toString() + "-" + jTextFieldAlunoRA.getText() + "-" + jComboBoxAlunoUF.getSelectedItem().toString() + ".pdf");
            PdfWriter.getInstance(document, new FileOutputStream(fileToRead)); 
            document.open(); // adicionando um parágrafo no documento 
            document.add(new Paragraph(jTextAreaRelatorio.getText()));
            document.close();
            //document.addTitle(jTextFieldCodigoRelatorio.getText());
            //document.addCreationDate();
            //document.addKeywords("www.devmedia.com.br"); 
            //document.addAuthor(jTextFieldProfessorRG.getText() + "-" + jComboBoxProfessorUF.getSelectedItem().toString() + " - " + jTextFieldProfessorNome.getText());
        } 
        catch(DocumentException de){
            System.err.println(de.getMessage()); 
        }
        catch(IOException ioe) {
          System.err.println(ioe.getMessage());
        }
        }
        else{
            try { 
            //File homedir = new File(System.getProperty("user.home"));
            String homedir = "C:/";
            File fileToRead = new File(homedir, "SGU/relatorio" + jTextFieldCodigoRelatorio.getText() + "-" + jTextFieldProfessorRG.getText() + "-" + jComboBoxProfessorUF.getSelectedItem().toString() + "-" + jTextFieldAlunoRA.getText() + "-" + jComboBoxAlunoUF.getSelectedItem().toString() + ".pdf");
            PdfWriter.getInstance(document, new FileOutputStream(fileToRead)); 
            document.open(); // adicionando um parágrafo no documento 
            document.add(new Paragraph(jTextAreaRelatorio.getText()));
            document.close();
            //document.addTitle(jTextFieldCodigoRelatorio.getText());
            //document.addCreationDate();
            //document.addKeywords("www.devmedia.com.br"); 
            //document.addAuthor(jTextFieldProfessorRG.getText() + "-" + jComboBoxProfessorUF.getSelectedItem().toString() + " - " + jTextFieldProfessorNome.getText());
        } 
        catch(DocumentException de){
            System.err.println(de.getMessage()); 
        }   catch (FileNotFoundException ex) {
                Logger.getLogger(AlunoRelatorioIndividualVIEW.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    private void jButtonGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGravarActionPerformed
        // TODO add your handling code here:
        //InserirAcervo();
        //ConsultarAcervoVerificador();
        //VerificadorPessoaSenha();
        InserirRelatorioIndividual();
    }//GEN-LAST:event_jButtonGravarActionPerformed

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        // TODO add your handling code here:
        Sair();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jRadioButtonRelatarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonRelatarActionPerformed
        // TODO add your handling code here:
        jRadioButtonRelatar.setSelected(true);
        jRadioButtonVisualizar.setSelected(false);
        jTextFieldCodigoRelatorio.setEnabled(false);
        
        jLabel12.setVisible(false);
        jLabel11.setVisible(false);
        jLabel2.setVisible(false);
        jLabel9.setVisible(false);
        jLabel7.setVisible(true);
        jComboBoxProfessorUF1.setVisible(false);
        jTextFieldProfessorRG1.setVisible(false);
        jTextFieldProfessorNome1.setVisible(false);
        jPasswordFieldProfessorSenha1.setVisible(false);
        jPasswordFieldProfessorSenha.setVisible(true);
        
        jTextFieldAlunoRA.setEditable(true);
        jTextFieldProfessorRG.setEditable(true);
        
        //jTextFieldCodigoRelatorio.setText("");
        LimparCampos3();
        
        jTabbedPaneRelatorioClasse.setEnabledAt(3, false);
        //int aba = -1 + jPanel1.getComponentCount();
        jTabbedPaneRelatorioClasse.setSelectedComponent(jPanel1);
        //jTabbedPaneRelatorioClasse.setSelectedIndex(aba); 
        
        jTextFieldAlunoRA.requestFocus();
    }//GEN-LAST:event_jRadioButtonRelatarActionPerformed

    private void jRadioButtonVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonVisualizarActionPerformed
        // TODO add your handling code here:
        jRadioButtonRelatar.setSelected(false);
        jRadioButtonVisualizar.setSelected(true);
        jTextFieldCodigoRelatorio.setEnabled(true);
        
        jLabel12.setVisible(true);
        jLabel11.setVisible(true);
        jLabel2.setVisible(true);
        jLabel9.setVisible(true);
        jLabel7.setVisible(false);
        jComboBoxProfessorUF1.setVisible(true);
        jTextFieldProfessorRG1.setVisible(true);
        jTextFieldProfessorNome1.setVisible(true);
        jPasswordFieldProfessorSenha1.setVisible(true);
        jPasswordFieldProfessorSenha.setVisible(false);
        
        jTextFieldAlunoRA.setEditable(false);
        jTextFieldProfessorRG.setEditable(false);
        
        jTextFieldProfessorRG1.setText("");
        jTextFieldProfessorNome1.setText("");
        jPasswordFieldProfessorSenha1.setText("");
        
        jTextFieldAlunoRA.setText("");
        jTextFieldAlunoNome.setText("");
        
        jTextFieldProfessorRG.setText("");
        jTextFieldProfessorNome.setText("");
        
        jTextFieldRelatarData.setText("  /  /    ");
        
        jTabbedPaneRelatorioClasse.setEnabledAt(3, true);
        jTabbedPaneRelatorioClasse.setSelectedComponent(jPanel1);
        
        jTextFieldProfessorRG1.requestFocus();
    }//GEN-LAST:event_jRadioButtonVisualizarActionPerformed

    private void jTextFieldAlunoRAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAlunoRAKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER){
            ConsultarVerificadorAluno();
            MostrarDadosTabelaRelatoriosAluno();
            jTextFieldAlunoRA.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldAlunoRAKeyPressed

    private void jTextFieldProfessorRGKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldProfessorRGKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER){
            ConsultarVerificadorDocente();
            MostrarDadosTabelaRelatoriosDocente();
            jTextFieldProfessorRG.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldProfessorRGKeyPressed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
        //CapsLock();
        jTextFieldAlunoRA.requestFocus();
    }//GEN-LAST:event_formInternalFrameActivated

    private void jButtonVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVisualizarActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,"Botão em Desenvolvimento pelo Programador...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
        //GerarPDF();
    }//GEN-LAST:event_jButtonVisualizarActionPerformed

    public void CapsLock(){
        Toolkit tk = Toolkit.getDefaultToolkit();  
        if(tk.getLockingKeyState(KeyEvent.VK_CAPS_LOCK)){
            System.out.println("caps lock ligado...");
        } 
        else{
            JOptionPane.showMessageDialog(null,"Precione a Tecla CAPS LOCK para começar a Digitar...","Informação: ",JOptionPane.INFORMATION_MESSAGE);
        }       
    }
    
    private void jTextFieldCodigoRelatorioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodigoRelatorioKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER){
            if ("".equals(jTextFieldCodigoRelatorio.getText())){
                JOptionPane.showMessageDialog(null,"Campo Código Vazio. Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
            }else{
                //ConsultarRelatos();
                //ConsultarRelatosAluno();
                //ConsultarRelatosDocente();
                VisualizarRelatorioIndividual();
                ConsultarVisualizacaoDocente();
                jTabbedPaneRelatorioClasse.setSelectedComponent(jPanel1);
            }    
        }
    }//GEN-LAST:event_jTextFieldCodigoRelatorioKeyPressed

    private void jTextFieldProfessorRG1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldProfessorRG1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER){
        ConsultarVerificadorDocente1();
        //MostrarDadosTabelaRelatoriosDocente();
        jPasswordFieldProfessorSenha1.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldProfessorRG1KeyPressed

    private void jTextAreaRelatorioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaRelatorioKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() != evt.VK_CAPS_LOCK){
            CapsLock();
        }
    }//GEN-LAST:event_jTextAreaRelatorioKeyPressed

    private void jRadioButtonNVisualizadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonNVisualizadosActionPerformed
        // TODO add your handling code here:
        jRadioButtonNVisualizados.setSelected(true);
        jRadioButtonVisualizados.setSelected(false);
        //ConsultarVisualizacaoDocente();
        VerificaSenhaVisualizacaoDocente();
    }//GEN-LAST:event_jRadioButtonNVisualizadosActionPerformed

    private void jRadioButtonVisualizadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonVisualizadosActionPerformed
        // TODO add your handling code here:
        jRadioButtonNVisualizados.setSelected(false);
        jRadioButtonVisualizados.setSelected(true);
        //ConsultarVisualizacaoDocente();
        VerificaSenhaVisualizacaoDocente();
    }//GEN-LAST:event_jRadioButtonVisualizadosActionPerformed

    private void jTableVisualizacoesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVisualizacoesMouseClicked
        // TODO add your handling code here:
        jTextAreaRelatorio.setText("");
        int linha = jTableVisualizacoes.getSelectedRow();
        jTextFieldCodigoRelatorio.setText(jTableVisualizacoes.getValueAt(linha,0).toString());
        VisualizarRelatorioIndividual();
        ConsultarVisualizacaoDocente();
        jTabbedPaneRelatorioClasse.setSelectedComponent(jPanel1);
    }//GEN-LAST:event_jTableVisualizacoesMouseClicked

    private void jButtonGravarAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGravarAlterarActionPerformed
        // TODO add your handling code here:
        //VerificadorPessoa();
        //MododeGravacao();
        //relatorio();
        RelatorioIndividualAluno();
    }//GEN-LAST:event_jButtonGravarAlterarActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        // TODO add your handling code here:
       MostraCodigo();
       jButtonGravar.setEnabled(true);
       jButtonNovo.setEnabled(false);
    }//GEN-LAST:event_jButtonNovoActionPerformed

    public void RelatorioIndividualAluno(){
        RelatorioIndividualdoAlunoRL relatorio = new RelatorioIndividualdoAlunoRL();
        jDesktopPaneSGUVIEW.add(relatorio);
        relatorio.setVisible(true);
    }
    
    public void ConsultarRelatosAluno(){
        try{
            BaseCTR consultarAlunoCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarAlunoCTR.ConsultarRelatosAluno(Integer.parseInt(jTextFieldCodigoRelatorio.getText()));
            while(rs.next()){       
                jComboBoxAlunoUF.setSelectedItem((rs.getString("pessoa_ci_uf")));
                jTextFieldAlunoRA.setText((rs.getString("pessoa_ci_numero")));
                jTextFieldAlunoNome.setText((rs.getString("pessoa_nome")));
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
         }
    }
    
    public void ConsultarRelatosDocente(){
        try{
            BaseCTR consultarAlunoCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarAlunoCTR.ConsultarRelatosDocente(Integer.parseInt(jTextFieldCodigoRelatorio.getText()));
            while(rs.next()){       
                jComboBoxProfessorUF.setSelectedItem((rs.getString("pessoa_ci_uf")));
                jTextFieldProfessorRG.setText((rs.getString("pessoa_ci_numero")));
                jTextFieldProfessorNome.setText((rs.getString("pessoa_nome")));
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
         }
    }
    
    public void ConsultarRelatos(){
        try{
            BaseCTR consultarAlunoCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarAlunoCTR.ConsultarRelatos(Integer.parseInt(jTextFieldCodigoRelatorio.getText()));
            while(rs.next()){       
                jTextAreaRelatorio.setText((rs.getString("empresa_relatos_descricao1")));
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
         }
    }
    
    public void LimparCampos(){
        jTextAreaRelatorio.setText("");
        jTextFieldAlunoNome.setText("");
        jTextFieldAlunoRA.setText("");
        jTextFieldCodigoRelatorio.setText("");
        jTextFieldProfessorNome.setText("");
        jTextFieldProfessorNome1.setText("");
        jTextFieldProfessorRG.setText("");
        jTextFieldProfessorRG1.setText("");
        jPasswordFieldProfessorSenha.setText("");
        jPasswordFieldProfessorSenha1.setText("");
    }
    
    public void LimparCampos2(){
        jTextFieldAlunoNome.setText("");
        jTextFieldAlunoRA.setText("");
        jTextFieldCodigoRelatorio.setText("");
        jPasswordFieldProfessorSenha.setText("");
        jTextAreaRelatorio.setText("");
    }
    
    public void LimparCampos3(){
        jTextFieldAlunoNome.setText("");
        jTextFieldAlunoRA.setText("");
        jTextFieldCodigoRelatorio.setText("");
        jPasswordFieldProfessorSenha.setText("");
        jTextAreaRelatorio.setText("");
        jTextFieldRelatarData.setText("  /  /    ");
        DefaultTableModel modelo = (DefaultTableModel) jTableRelatoriosdoAluno.getModel();
        modelo.setNumRows(0);
        DefaultTableModel modelo2 = (DefaultTableModel) jTableRelatoriosdoProfessor.getModel();
        modelo2.setNumRows(0);
    }
    
    public void ConsultarVerificadorAluno(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.VerificadorRelatarPessoaAluno(jComboBoxAlunoUF.getSelectedItem().toString(), jTextFieldAlunoRA.getText().toUpperCase().replace(".", "").replace("-", ""));
            int v = 0;
            while(rs.next()){       
                v = (rs.getInt("verificador"));  
            }
            if (v == 0){
                JOptionPane.showMessageDialog(null,"RG/RA não encontrado ou não existente. Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                jTextFieldAlunoRA.setText("");
                jTextFieldAlunoNome.setText("");
                jTextFieldAlunoRA.requestFocus();

                AlunoConsultaDIALOG  jDialog = new AlunoConsultaDIALOG(null, true);
                jDialog.setModal(true);
                jDialog.setVisible(true);
                jComboBoxAlunoUF.setSelectedItem(jDialog.getGetuf());
                jTextFieldAlunoRA.setText(jDialog.getGetid());
                jTextFieldAlunoNome.setText(jDialog.getGetnome());

            }else{
                ConsultarRelatarAlunoNome();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
         }
    }
    
    public void ConsultarVerificadorDocente(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.VerificadorRelatarPessoaDocente(jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""));
            int v = 0;
            while(rs.next()){       
                v = (rs.getInt("verificador"));  
            }
            if (v == 0){
                JOptionPane.showMessageDialog(null,"RG não encontrado ou não existente. Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                jTextFieldProfessorRG.setText("");
                jTextFieldProfessorNome.setText("");
                jTextFieldProfessorRG.requestFocus();
                //AlunoConsultaVIEW f = new AlunoConsultaVIEW();
                //jDesktopPaneSGUVIEW.add(f);
                //f.setVisible(true);
                //this.dispose();
            }else{
                ConsultarRelatarDocenteNome();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
         }
    }
    
    public void ConsultarVerificadorDocente1(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.VerificadorRelatarPessoaDocente(jComboBoxProfessorUF1.getSelectedItem().toString(), jTextFieldProfessorRG1.getText().toUpperCase().replace(".", "").replace("-", ""));
            int v = 0;
            while(rs.next()){       
                v = (rs.getInt("verificador"));  
            }
            if (v == 0){
                JOptionPane.showMessageDialog(null,"RG não encontrado ou não existente. Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                jTextFieldProfessorRG1.setText("");
                jTextFieldProfessorNome1.setText("");
                jTextFieldProfessorRG1.requestFocus();
                //AlunoConsultaVIEW f = new AlunoConsultaVIEW();
                //jDesktopPaneSGUVIEW.add(f);
                //f.setVisible(true);
                //this.dispose();
            }else{
                ConsultarRelatarDocenteNome1();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
         }
    }
    
    public void ConsultarRelatarAlunoNome(){
        try{
            BaseCTR consultar = new BaseCTR();
            ResultSet rs=null;
            rs=consultar.ConsultarRelatarPessoaNome(jComboBoxAlunoUF.getSelectedItem().toString(), jTextFieldAlunoRA.getText().toUpperCase().replace(".", "").replace("-", ""));
            while (rs.next()){
                jTextFieldAlunoNome.setText((rs.getString("pessoa_nome")));
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
        }
    }
    
    public void ConsultarRelatarDocenteNome(){
        try{
            BaseCTR consultar = new BaseCTR();
            ResultSet rs=null;
            rs=consultar.ConsultarRelatarPessoaNome(jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""));
            while (rs.next()){
                jTextFieldProfessorNome.setText((rs.getString("pessoa_nome")));
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
        }
    }
    
    public void ConsultarRelatarDocenteNome1(){
        try{
            BaseCTR consultar = new BaseCTR();
            ResultSet rs=null;
            rs=consultar.ConsultarRelatarPessoaNome(jComboBoxProfessorUF1.getSelectedItem().toString(), jTextFieldProfessorRG1.getText().toUpperCase().replace(".", "").replace("-", ""));
            while (rs.next()){
                jTextFieldProfessorNome1.setText((rs.getString("pessoa_nome")));
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
        }
    }
    
    public void ConsultarUF(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarUF();
            jComboBoxAlunoUF.removeAllItems();
            jComboBoxProfessorUF.removeAllItems();
            jComboBoxProfessorUF1.removeAllItems();
            while(rs.next()){       
                jComboBoxAlunoUF.addItem(rs.getString("uf_nome"));    
                jComboBoxProfessorUF.addItem(rs.getString("uf_nome"));    
                jComboBoxProfessorUF1.addItem(rs.getString("uf_nome"));    
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void MostraCodigo(){
        jTextFieldCodigoRelatorio.setText("");
        try{
            BaseCTR consultar = new BaseCTR();
            ResultSet rs=null;
            rs=consultar.EmpresaRelatosCodigo();
            while (rs.next()){
                System.out.println(rs);
                jTextFieldCodigoRelatorio.setText(rs.getString("codigo"));
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
        }
    }
    
    public void VerificadorPessoaSenha(){
    try{
            BaseCTR bibliotecaCTR = new BaseCTR();
            ResultSet rs=null;
            rs=bibliotecaCTR.VerificadorPessoaSenha(jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""), md5(jPasswordFieldProfessorSenha.getText()));
            int v = 0;
            while(rs.next()){       
                v = (rs.getInt("verificador"));  
            }
            if (v == 1){
                VerificarRelatorio();
                //System.out.println("DEU ERRADO");
            }else{
                JOptionPane.showMessageDialog(null,"Senha está digitada errada. Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
                //AlterarPessoa();
                jPasswordFieldProfessorSenha.setText("");
                jPasswordFieldProfessorSenha.requestFocus();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }    
    }
    
    public void VerificarRelatorio(){
    try{
            BaseCTR bibliotecaCTR = new BaseCTR();
            ResultSet rs=null;
            rs=bibliotecaCTR.VerificaConsultaRelatos(Integer.parseInt(jTextFieldCodigoRelatorio.getText()), jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""));
            int v = 0;
            while(rs.next()){       
                v = (rs.getInt("verificador"));  
            }
            if(v == 0){
                InserirRelatorioAluno();
            }
            if (v == 1){
                AlterarRelatorioAluno();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }    
    }
    
    public void InserirRelatorioAluno(){
    try{
        BaseCTR bibliotecaCTR = new BaseCTR();     
        int i = JOptionPane.showConfirmDialog(null, "Deseja Inserir este Relatório a "+jTextFieldAlunoNome.getText()+"? ","Informação: ", JOptionPane.YES_NO_OPTION);
                if(i == JOptionPane.YES_OPTION){
                    bibliotecaCTR.InserirRelatorioIndividualAluno(Integer.parseInt(jTextFieldCodigoRelatorio.getText()), jTextAreaRelatorio.getText().toUpperCase(),jTextFieldRelatarData.getText());
                    bibliotecaCTR.InserirEmpresaRelatosPessoa(Integer.parseInt(jTextFieldCodigoRelatorio.getText()),jComboBoxAlunoUF.getSelectedItem().toString(), jTextFieldAlunoRA.getText().toUpperCase().replace(".", "").replace("-", ""));
                    bibliotecaCTR.InserirEmpresaRelatosPessoa(Integer.parseInt(jTextFieldCodigoRelatorio.getText()),jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""));
                    GerarPDF();
                    JOptionPane.showMessageDialog(null,"Relatório Inserido com Sucesso a "+jTextFieldAlunoNome.getText()+". ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                    MostrarDadosTabelaRelatoriosAluno();
                    MostrarDadosTabelaRelatoriosDocente();
                    jButtonNovo.setEnabled(true);
                    jButtonGravar.setEnabled(false);
                    LimparCampos2(); 
                    //MostraCodigo();
                }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
         }    
     }
    
    public void AlterarRelatorioAluno(){
    try{
        BaseCTR bibliotecaCTR = new BaseCTR();
        int i = JOptionPane.showConfirmDialog(null, "Deseja Alterar este Relatório a este Aluno(a)? ","Informação: ", JOptionPane.YES_NO_OPTION);
                if(i == JOptionPane.YES_OPTION){
                    //bibliotecaCTR.InserirRelatorioIndividualAluno(Integer.parseInt(jTextFieldCodigoRelatorio.getText()), jTextAreaRelatorio.getText().toUpperCase());
                    //bibliotecaCTR.InserirEmpresaRelatosPessoa(Integer.parseInt(jTextFieldCodigoRelatorio.getText()),jComboBoxAlunoUF.getSelectedItem().toString(), jTextFieldAlunoRA.getText().toUpperCase().replace(".", "").replace("-", ""));
                    //bibliotecaCTR.InserirEmpresaRelatosPessoa(Integer.parseInt(jTextFieldCodigoRelatorio.getText()),jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""));
                    //GerarPDF();
                    //JOptionPane.showMessageDialog(null,"Relatório Alterado com Sucesso. ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                    //MostrarDadosTabelaRelatoriosAluno();
                    //MostrarDadosTabelaRelatoriosDocente();
                    //LimparCampos2(); 
                    //MostraCodigo();
                    JOptionPane.showMessageDialog(null,"Esta Função Não Está Disponivel No Momento","Informação: ",JOptionPane.INFORMATION_MESSAGE);
                }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
         }    
    }
    
    
    public void VerificadorPessoaSenha2(){
    try{
            BaseCTR bibliotecaCTR = new BaseCTR();
            ResultSet rs=null;
            rs=bibliotecaCTR.VerificadorPessoaSenha(jComboBoxProfessorUF1.getSelectedItem().toString(), jTextFieldProfessorRG1.getText().toUpperCase().replace(".", "").replace("-", ""), md5(jPasswordFieldProfessorSenha1.getText()));
            int v = 0;
            while(rs.next()){       
                v = (rs.getInt("verificador"));  
            }
            if (v == 1){
               //InserirVisualizacaoDocente();
               //ConsultarRelatos();
               //ConsultarRelatosAluno();
               //ConsultarRelatosDocente();
               //LimparCampos2();
                ConsultarVisualizacaoDocente();
            }else{
                JOptionPane.showMessageDialog(null,"Senha está digitada errada. Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
                //AlterarPessoa();
                jPasswordFieldProfessorSenha1.setText("");
                jPasswordFieldProfessorSenha1.requestFocus();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }    
    }
    
    public void VerificadorPessoaSenha1(){
    try{
            BaseCTR bibliotecaCTR = new BaseCTR();
            ResultSet rs=null;
            rs=bibliotecaCTR.VerificadorPessoaSenha(jComboBoxProfessorUF1.getSelectedItem().toString(), jTextFieldProfessorRG1.getText().toUpperCase().replace(".", "").replace("-", ""), md5(jPasswordFieldProfessorSenha1.getText()));
            int v = 0;
            while(rs.next()){       
                v = (rs.getInt("verificador"));  
            }
            if (v == 1){
               InserirVisualizacaoDocente();
               ConsultarRelatos();
               ConsultarRelatosAluno();
               ConsultarRelatosDocente();
               //LimparCampos2();
            }else{
                JOptionPane.showMessageDialog(null,"Senha está digitada errada. Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
                //AlterarPessoa();
                jPasswordFieldProfessorSenha1.setText("");
                jPasswordFieldProfessorSenha1.requestFocus();
            }
         }
         catch (Exception e){
            System.out.println(e.getMessage());    
            }    
    }
    
    public void InserirVisualizacaoDocente(){
        try{
            BaseCTR bibliotecaCTR = new BaseCTR();
            bibliotecaCTR.InserirVisualizacaoDocente(Integer.parseInt(jTextFieldCodigoRelatorio.getText()),jComboBoxProfessorUF1.getSelectedItem().toString(),jTextFieldProfessorRG1.getText().toUpperCase().replace(".", "").replace("-", ""));
        }catch(Exception e){
            //JOptionPane.showMessageDialog(null,"Campos de Dados em Branco... ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
            System.out.println(e.getMessage());
        }
    }
    
    public void InserirRelatorioIndividual(){
    try{
            //BibliotecaCTR inserirCTR = new EscolaCTR();	
            if ("  /  /    ".equals(jTextFieldRelatarData.getText()) || "".equals(jTextFieldCodigoRelatorio.getText()) || "".equals(jComboBoxProfessorUF.getSelectedItem()) || "".equals(jTextFieldProfessorRG.getText()) || "".equals(jTextFieldAlunoRA.getText()) || "".equals(jComboBoxAlunoUF.getSelectedItem()) || "".equals(jTextAreaRelatorio.getText()) || "".equals(jPasswordFieldProfessorSenha.getText()) || "".equals(jTextFieldProfessorNome.getText()) || "".equals(jTextFieldAlunoNome.getText())){
               JOptionPane.showMessageDialog(null,"Campos de Dados em Branco, Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
               jTextFieldAlunoRA.requestFocus();
            }else{
                VerificadorPessoaSenha();
                }
            }
            catch(Exception e){
                //JOptionPane.showMessageDialog(null,"Campos de Dados em Branco... ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
		System.out.println(e.getMessage());
	}    
    }
    
    public void VisualizarRelatorioIndividual(){
    try{
            //BibliotecaCTR inserirCTR = new EscolaCTR();	
            if ("".equals(jTextFieldCodigoRelatorio.getText()) || "".equals(jComboBoxProfessorUF1.getSelectedItem()) || "".equals(jTextFieldProfessorRG1.getText()) || "".equals(jPasswordFieldProfessorSenha1.getText()) || "".equals(jTextFieldProfessorNome1.getText())){
               JOptionPane.showMessageDialog(null,"Campos de Dados em Branco, Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
               jTextFieldProfessorRG1.requestFocus();
            }else{
                VerificadorPessoaSenha1();
                }
            }
            catch(Exception e){
                //JOptionPane.showMessageDialog(null,"Campos de Dados em Branco... ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
		System.out.println(e.getMessage());
	}    
    }
    
    public void MostrarDadosTabelaRelatoriosAluno(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarRelatoriosAluno(jComboBoxAlunoUF.getSelectedItem().toString(), jTextFieldAlunoRA.getText().toUpperCase().replace(".", "").replace("-", ""));
            DefaultTableModel modelo = (DefaultTableModel) jTableRelatoriosdoAluno.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                Object[] novaLinha = new Object[4];
                novaLinha[0] = rs.getString("empresa_relatos_id");
                novaLinha[1] = rs.getString("empresa_relatos_pessoas_data");
                novaLinha[2] = rs.getString("pessoa_nome");
                novaLinha[3] = rs.getString("empresa_nome");
                modelo.addRow(novaLinha);
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void MostrarDadosTabelaRelatoriosDocente(){
        try{
            BaseCTR consultarCTR = new BaseCTR();
            ResultSet rs=null;
            rs=consultarCTR.ConsultarRelatoriosDocente(jComboBoxProfessorUF.getSelectedItem().toString(), jTextFieldProfessorRG.getText().toUpperCase().replace(".", "").replace("-", ""));
            DefaultTableModel modelo = (DefaultTableModel) jTableRelatoriosdoProfessor.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                Object[] novaLinha = new Object[6];
                novaLinha[0] = rs.getString("empresa_relatos_id");
                novaLinha[1] = rs.getString("empresa_relatos_pessoas_data");
                novaLinha[2] = rs.getString("pessoa_ci_uf");
                novaLinha[3] = rs.getString("pessoa_ci_numero");
                novaLinha[4] = rs.getString("pessoa_nome");
                novaLinha[5] = rs.getString("empresa_nome");
                modelo.addRow(novaLinha);
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void Iniciar(){
        this.setTitle("Relatório Individual do Aluno(a)");
        this.setSize(900, 600);
        jButtonGravar.setEnabled(false);
        jTextFieldRelatarData.setText(outdata.format(hoje));
        //MostraCodigo();
        jRadioButtonRelatar.doClick();
        jRadioButtonNVisualizados.setSelected(true);
        //jTextFieldProfessorNome.setEnabled(false);
        //jTextFieldProfessorNome1.setEnabled(false);
        //jTextFieldAlunoNome.setEnabled(false);
        jTextFieldCodigoRelatorio.setEnabled(false);
        ConsultarUF();
    }
    
    public void Sair(){
        this.dispose();
    }
    
    public void VerificaSenhaVisualizacaoDocente(){
    try{
            //BibliotecaCTR inserirCTR = new EscolaCTR();	
            if ("".equals(jComboBoxProfessorUF1.getSelectedItem()) || "".equals(jTextFieldProfessorRG1.getText()) || "".equals(jPasswordFieldProfessorSenha1.getText()) || "".equals(jTextFieldProfessorNome1.getText())){
               JOptionPane.showMessageDialog(null,"Campos de Dados em Branco, Verifique...","Informação: ",JOptionPane.INFORMATION_MESSAGE);   
               jTextFieldProfessorRG1.requestFocus();
            }else{
                //VerificadorPessoaSenha1();
                //ConsultarVisualizacaoDocente();
                VerificadorPessoaSenha2();
                }
            }
            catch(Exception e){
                //JOptionPane.showMessageDialog(null,"Campos de Dados em Branco... ","Informação: ",JOptionPane.INFORMATION_MESSAGE);
		System.out.println(e.getMessage());
	}    
    }
    
    public void ConsultarVisualizacaoDocente() {
        if (jRadioButtonNVisualizados.isSelected()){
            AlunosNaoVistosDocente();
        }
        if (jRadioButtonVisualizados.isSelected()){
            AlunosVistosDocente();
        }
    }
    
    public void AlunosNaoVistosDocente(){
        try{
            BaseCTR consultar = new BaseCTR();
            ResultSet rs=null;
            rs=consultar.AlunosNaoVistosDocente(jComboBoxProfessorUF1.getSelectedItem().toString(), jTextFieldProfessorRG1.getText().toUpperCase().replace(".", "").replace("-", ""));
            DefaultTableModel modelo = (DefaultTableModel) jTableVisualizacoes.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                Object[] novaLinha = new Object[5];
                novaLinha[0] = rs.getString("id");
                novaLinha[1] = rs.getString("data");
                novaLinha[2] = rs.getString("pessoa_ci_uf");
                novaLinha[3] = rs.getString("pessoa_ci_numero");
                novaLinha[4] = rs.getString("pessoa_nome");
                modelo.addRow(novaLinha);
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    public void AlunosVistosDocente(){
        try{
            BaseCTR consultar = new BaseCTR();
            ResultSet rs=null;
            rs=consultar.AlunosVistosDocente(jComboBoxProfessorUF1.getSelectedItem().toString(), jTextFieldProfessorRG1.getText().toUpperCase().replace(".", "").replace("-", ""));
            DefaultTableModel modelo = (DefaultTableModel) jTableVisualizacoes.getModel();
            modelo.setNumRows(0);
            while (rs.next()){
                Object[] novaLinha = new Object[5];
                novaLinha[0] = rs.getString("id");
                novaLinha[1] = rs.getString("data");
                novaLinha[2] = rs.getString("pessoa_ci_uf");
                novaLinha[3] = rs.getString("pessoa_ci_numero");
                novaLinha[4] = rs.getString("pessoa_nome");
                modelo.addRow(novaLinha);
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());    
            }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonGravar;
    private javax.swing.JButton jButtonGravarAlterar;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JButton jButtonVisualizar;
    private javax.swing.JComboBox jComboBoxAlunoUF;
    private javax.swing.JComboBox jComboBoxProfessorUF;
    private javax.swing.JComboBox jComboBoxProfessorUF1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPasswordField jPasswordFieldProfessorSenha;
    private javax.swing.JPasswordField jPasswordFieldProfessorSenha1;
    private javax.swing.JRadioButton jRadioButtonNVisualizados;
    private javax.swing.JRadioButton jRadioButtonRelatar;
    private javax.swing.JRadioButton jRadioButtonVisualizados;
    private javax.swing.JRadioButton jRadioButtonVisualizar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPaneRelatorioClasse;
    private javax.swing.JTable jTableRelatoriosdoAluno;
    private javax.swing.JTable jTableRelatoriosdoProfessor;
    private javax.swing.JTable jTableVisualizacoes;
    private javax.swing.JTextArea jTextAreaRelatorio;
    private javax.swing.JTextField jTextFieldAlunoNome;
    private javax.swing.JTextField jTextFieldAlunoRA;
    private javax.swing.JTextField jTextFieldCodigoRelatorio;
    private javax.swing.JTextField jTextFieldProfessorNome;
    private javax.swing.JTextField jTextFieldProfessorNome1;
    private javax.swing.JTextField jTextFieldProfessorRG;
    private javax.swing.JTextField jTextFieldProfessorRG1;
    private javax.swing.JFormattedTextField jTextFieldRelatarData;
    // End of variables declaration//GEN-END:variables
    

}
